
- hosts: localhost

  collections:
    - netfoundry.platform

  tasks:
  - name: Establish session and find Network resources
    netfoundry_info:
      network: Active Directory AWS
      credentials: nfint-ZitiBastions.json
    register: netfoundry_info

  - name: declare an AppWAN
    netfoundry_appwan:
      network: "{{ netfoundry_info.network }}"
      name: ad services REDUX
      endpoints:
      - "#adclient"
      services:
      - "#ldapservice"
      - "#rdpservice"
      - "#domainControllerServices"
      - "#customerRouterSSH"

  - name: declare a hosting Endpoint
    netfoundry_endpoint:
      network: "{{ netfoundry_info.network }}"
      name: AD Services Hosting ziti-edge-tunnel
      dest: /tmp/ott

  - name: SSH Canary Service
    netfoundry_service:
      network: "{{ netfoundry_info.network }}"
      name: Customer Edge Router SSH Canary
      attributes: "#customerRouterSSH"
      clientHostName: ad-er-1.ad.sandbox.netfoundry.io
      clientPortRange: 22
      egressRouter: ad-er-1
      serverHostName: localhost
      serverPortRange: 22

  - name: Create Server Config
    command: ziti edge create config "AD {{item.client}} Server Config" host.v1 '{"dialInterceptedProtocol":true,"address":"{{item.server}}","dialInterceptedPort":true}'
    loop: "{{ domain_controllers }}"
    tags:
    - cli_create_tcp_udp

  - name: TCP+UDP Create Client Config
    command: ziti edge create config "AD {{item.0.name}} {{item.2}} {{item.1.client}} Client Config" intercept.v1 '{"protocols":["{{item.2|lower}}"],"addresses":["{{item.1.client}}"], "portRanges":[{"low":{{item.0.port}}, "high":{{item.0.port}}}]}'
    with_nested:
    - "{{ server_ports_tcp_udp }}"
    - "{{ domain_controllers }}"
    - ["TCP","UDP"]
    tags: cli_create_tcp_udp

  - name: TCP+UDP Create Service
    command: ziti edge create service "AD {{item.0.name}} {{item.2}} {{item.1.client}} Service" -c "AD {{item.1.client}} Server Config","AD {{item.0.name}} {{item.2}} {{item.1.client}} Client Config" --role-attributes domainControllerServices
    with_nested:
    - "{{ server_ports_tcp_udp }}"
    - "{{ domain_controllers }}"
    - ["TCP","UDP"]
    tags: cli_create_tcp_udp

  - name: TCP Create Client Config
    command: ziti edge create config "AD {{item.0.name}} {{item.2}} {{item.1.client}} Client Config" intercept.v1 '{"protocols":["{{item.2|lower}}"],"addresses":["{{item.1.client}}"], "portRanges":[{"low":{{item.0.port}}, "high":{{item.0.port}}}]}'
    with_nested:
    - "{{ server_ports_tcp }}"
    - "{{ domain_controllers }}"
    - ["TCP"]
    tags: cli_create_tcp

  - name: TCP Create Service
    command: ziti edge create service "AD {{item.0.name}} {{item.2}} {{item.1.client}} Service" -c "AD {{item.1.client}} Server Config","AD {{item.0.name}} {{item.2}} {{item.1.client}} Client Config" --role-attributes domainControllerServices
    with_nested:
    - "{{ server_ports_tcp }}"
    - "{{ domain_controllers }}"
    - ["TCP"]
    tags: cli_create_tcp

  - name: UDP Create Client Config
    command: ziti edge create config "AD {{item.0.name}} {{item.2}} {{item.1.client}} Client Config" intercept.v1 '{"protocols":["{{item.2|lower}}"],"addresses":["{{item.1.client}}"], "portRanges":[{"low":{{item.0.port}}, "high":{{item.0.port}}}]}'
    with_nested:
    - "{{ server_ports_udp }}"
    - "{{ domain_controllers }}"
    - ["UDP"]
    tags: cli_create_udp

  - name: UDP Create Service
    command: ziti edge create service "AD {{item.0.name}} {{item.2}} {{item.1.client}} Service" -c "AD {{item.1.client}} Server Config","AD {{item.0.name}} {{item.2}} {{item.1.client}} Client Config" --role-attributes domainControllerServices
    with_nested:
    - "{{ server_ports_udp }}"
    - "{{ domain_controllers }}"
    - ["UDP"]
    tags: cli_create_udp

  - name: Delete Service
    command: ziti edge delete service "AD {{item.0.name}} {{item.2}} {{item.1.client}} Service"
    with_nested:
    - "{{ server_ports_tcp_udp+server_ports_tcp+server_ports_udp }}"
    - "{{ domain_controllers }}"
    - ["TCP","UDP"]
    tags: cli_delete

  - name: Delete Client Config
    command: ziti edge delete config "AD {{item.0.name}} {{item.2}} {{item.1.client}} Client Config"
    with_nested:
    - "{{ server_ports_tcp_udp+server_ports_tcp+server_ports_udp }}"
    - "{{ domain_controllers }}"
    - ["TCP","UDP"]
    tags: cli_delete

  - name: Delete Server Config
    command: ziti edge delete config "AD {{item.client}} Server Config"
    loop: "{{ domain_controllers }}"
    tags: 
    - cli_delete
    - cli_delete_configs

  - name: TCP AD Domain Controller Services
    netfoundry_service:
      network: "{{ netfoundry_info.network }}"
      name: "AD {{ item.0.name }} {{ item.2 }} {{ item.1.client }}"
      attributes: "#domainControllerServices"
      clientHostName: "{{ item.1.client }}"
      clientPortRange: "{{ item.0.port }}"
      endpoints: AD Services Hosting ziti-edge-tunnel
      serverHostName: "{{ item.1.server }}"
      serverPortRange: "{{ item.0.port }}"
      serverProtocol: "{{ item.2 }}"
      encryptionRequired: Yes
    with_nested:
    - "{{ server_ports_tcp }}"
    - "{{ domain_controllers }}"
    - ["TCP"]

  - name: UDP AD Domain Controller Services
    netfoundry_service:
      network: "{{ netfoundry_info.network }}"
      name: "AD {{ item.0.name }} {{ item.2 }} {{ item.1.client }}"
      attributes: "#domainControllerServices"
      clientHostName: "{{ item.1.client }}"
      clientPortRange: "{{ item.0.port }}"
      endpoints: AD Services Hosting ziti-edge-tunnel
      serverHostName: "{{ item.1.server }}"
      serverPortRange: "{{ item.0.port }}"
      serverProtocol: "{{ item.2 }}"
      encryptionRequired: Yes
    with_nested:
    - "{{ server_ports_udp }}"
    - "{{ domain_controllers }}"
    - ["UDP"]
    
  vars:
    domain_controllers:
    - client: ad.sandbox.netfoundry.io
      server: ad.sandbox.netfoundry.io
    - client: win-l0909ihsmqa.ad.sandbox.netfoundry.io
      server: 10.12.2.220
    - client: win-daj1q9dlsfl.ad.sandbox.netfoundry.io
      server: 10.12.1.128
    server_ports_tcp_udp:
    - name: DNS
      port: 53
    - name: Passwd
      port: 464
    - name: LDAP
      port: 389
    - name: KDC
      port: 88
    server_ports_tcp:
    - name: RPC
      port: 135
    - name: LDAP SSL
      port: 636
    - name: LDAP GC
      port: 3268
    - name: LDAP GC SSL
      port: 3269
    - name: SMB
      port: 445
    server_ports_udp:
    - name: W32Time
      port: 123
