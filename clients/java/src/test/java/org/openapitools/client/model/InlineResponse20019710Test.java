/*
 * untitled API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5170
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InlineResponse20019710
 */
public class InlineResponse20019710Test {
    private final InlineResponse20019710 model = new InlineResponse20019710();

    /**
     * Model tests for InlineResponse20019710
     */
    @Test
    public void testInlineResponse20019710() {
        // TODO: test InlineResponse20019710
    }

    /**
     * Test the property 'zitiCliLinuxBinarySha1'
     */
    @Test
    public void zitiCliLinuxBinarySha1Test() {
        // TODO: test zitiCliLinuxBinarySha1
    }

    /**
     * Test the property 'zitiTunnelLinuxBinary'
     */
    @Test
    public void zitiTunnelLinuxBinaryTest() {
        // TODO: test zitiTunnelLinuxBinary
    }

    /**
     * Test the property 'zitiTunnelLinuxBinarySha1'
     */
    @Test
    public void zitiTunnelLinuxBinarySha1Test() {
        // TODO: test zitiTunnelLinuxBinarySha1
    }

    /**
     * Test the property 'zitiControllerBinary'
     */
    @Test
    public void zitiControllerBinaryTest() {
        // TODO: test zitiControllerBinary
    }

    /**
     * Test the property 'zitiCliLinuxBinaryMd5'
     */
    @Test
    public void zitiCliLinuxBinaryMd5Test() {
        // TODO: test zitiCliLinuxBinaryMd5
    }

    /**
     * Test the property 'zitiRouterLinuxBinarySha1'
     */
    @Test
    public void zitiRouterLinuxBinarySha1Test() {
        // TODO: test zitiRouterLinuxBinarySha1
    }

    /**
     * Test the property 'zitiRouterLinuxBinarySha256'
     */
    @Test
    public void zitiRouterLinuxBinarySha256Test() {
        // TODO: test zitiRouterLinuxBinarySha256
    }

    /**
     * Test the property 'zitiRouterLinuxBinaryMd5'
     */
    @Test
    public void zitiRouterLinuxBinaryMd5Test() {
        // TODO: test zitiRouterLinuxBinaryMd5
    }

    /**
     * Test the property 'zitiWindowsDesktopEdge'
     */
    @Test
    public void zitiWindowsDesktopEdgeTest() {
        // TODO: test zitiWindowsDesktopEdge
    }

    /**
     * Test the property 'zitiMacDesktopEdge'
     */
    @Test
    public void zitiMacDesktopEdgeTest() {
        // TODO: test zitiMacDesktopEdge
    }

    /**
     * Test the property 'zitiControllerBinarySha1'
     */
    @Test
    public void zitiControllerBinarySha1Test() {
        // TODO: test zitiControllerBinarySha1
    }

    /**
     * Test the property 'zitiControllerBinaryMd5'
     */
    @Test
    public void zitiControllerBinaryMd5Test() {
        // TODO: test zitiControllerBinaryMd5
    }

    /**
     * Test the property 'zitiControllerBinarySha256'
     */
    @Test
    public void zitiControllerBinarySha256Test() {
        // TODO: test zitiControllerBinarySha256
    }

    /**
     * Test the property 'zitiIosEdge'
     */
    @Test
    public void zitiIosEdgeTest() {
        // TODO: test zitiIosEdge
    }

    /**
     * Test the property 'zitiCliLinuxBinary'
     */
    @Test
    public void zitiCliLinuxBinaryTest() {
        // TODO: test zitiCliLinuxBinary
    }

    /**
     * Test the property 'zitiVersion'
     */
    @Test
    public void zitiVersionTest() {
        // TODO: test zitiVersion
    }

    /**
     * Test the property 'zitiRouterLinuxBinary'
     */
    @Test
    public void zitiRouterLinuxBinaryTest() {
        // TODO: test zitiRouterLinuxBinary
    }

    /**
     * Test the property 'zitiTunnelLinuxBinarySha256'
     */
    @Test
    public void zitiTunnelLinuxBinarySha256Test() {
        // TODO: test zitiTunnelLinuxBinarySha256
    }

    /**
     * Test the property 'zitiAndroidEdge'
     */
    @Test
    public void zitiAndroidEdgeTest() {
        // TODO: test zitiAndroidEdge
    }

    /**
     * Test the property 'zitiTunnelLinuxBinaryMd5'
     */
    @Test
    public void zitiTunnelLinuxBinaryMd5Test() {
        // TODO: test zitiTunnelLinuxBinaryMd5
    }

    /**
     * Test the property 'zitiCliLinuxBinarySha256'
     */
    @Test
    public void zitiCliLinuxBinarySha256Test() {
        // TODO: test zitiCliLinuxBinarySha256
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

}
