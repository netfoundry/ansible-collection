=begin
#untitled API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 5227

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'date'

module OpenapiClient
  class InlineResponse2003EmbeddedConfigIdByConfigTypeId
    attr_accessor :d75e27f0_ebab_4567_8440_c24f02f2eca5

    attr_accessor :cf3962b1_a98e_4ade_ae25_cdc388e7feb3

    attr_accessor :_2c1998a1_32e2_4084_b20a_b580570f4fbf

    attr_accessor :_4c42c4db_f039_4a57_8264_5f57af512614

    attr_accessor :_7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc

    attr_accessor :_714a918a_7935_4b4f_82c3_afbadcd9e59b

    attr_accessor :b1582680_ab7b_45d0_ac36_b00f82df8e79

    attr_accessor :e7f6ef8d_da57_444c_b677_f03974f5d8be

    attr_accessor :_6fa5c2bc_b7f7_47f8_9229_e927722adb27

    attr_accessor :_170c6b9b_f010_46a1_a2ee_cd6729e1f5dc

    attr_accessor :_64a39300_b672_413b_9d8c_42175f7e84dd

    attr_accessor :ea6e632b_d8e1_420f_bd8f_ad50b067bad6

    attr_accessor :_7491e52d_97e8_4759_8a63_c8ea8a75f822

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'d75e27f0_ebab_4567_8440_c24f02f2eca5' => :'d75e27f0-ebab-4567-8440-c24f02f2eca5',
        :'cf3962b1_a98e_4ade_ae25_cdc388e7feb3' => :'cf3962b1-a98e-4ade-ae25-cdc388e7feb3',
        :'_2c1998a1_32e2_4084_b20a_b580570f4fbf' => :'2c1998a1-32e2-4084-b20a-b580570f4fbf',
        :'_4c42c4db_f039_4a57_8264_5f57af512614' => :'4c42c4db-f039-4a57-8264-5f57af512614',
        :'_7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc' => :'7cafedc5-17b8-4c1e-8b6f-0d9bc1b4b7bc',
        :'_714a918a_7935_4b4f_82c3_afbadcd9e59b' => :'714a918a-7935-4b4f-82c3-afbadcd9e59b',
        :'b1582680_ab7b_45d0_ac36_b00f82df8e79' => :'b1582680-ab7b-45d0-ac36-b00f82df8e79',
        :'e7f6ef8d_da57_444c_b677_f03974f5d8be' => :'e7f6ef8d-da57-444c-b677-f03974f5d8be',
        :'_6fa5c2bc_b7f7_47f8_9229_e927722adb27' => :'6fa5c2bc-b7f7-47f8-9229-e927722adb27',
        :'_170c6b9b_f010_46a1_a2ee_cd6729e1f5dc' => :'170c6b9b-f010-46a1-a2ee-cd6729e1f5dc',
        :'_64a39300_b672_413b_9d8c_42175f7e84dd' => :'64a39300-b672-413b-9d8c-42175f7e84dd',
        :'ea6e632b_d8e1_420f_bd8f_ad50b067bad6' => :'ea6e632b-d8e1-420f-bd8f-ad50b067bad6',
        :'_7491e52d_97e8_4759_8a63_c8ea8a75f822' => :'7491e52d-97e8-4759-8a63-c8ea8a75f822'
      }
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'d75e27f0_ebab_4567_8440_c24f02f2eca5' => :'String',
        :'cf3962b1_a98e_4ade_ae25_cdc388e7feb3' => :'String',
        :'_2c1998a1_32e2_4084_b20a_b580570f4fbf' => :'String',
        :'_4c42c4db_f039_4a57_8264_5f57af512614' => :'String',
        :'_7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc' => :'String',
        :'_714a918a_7935_4b4f_82c3_afbadcd9e59b' => :'String',
        :'b1582680_ab7b_45d0_ac36_b00f82df8e79' => :'String',
        :'e7f6ef8d_da57_444c_b677_f03974f5d8be' => :'String',
        :'_6fa5c2bc_b7f7_47f8_9229_e927722adb27' => :'String',
        :'_170c6b9b_f010_46a1_a2ee_cd6729e1f5dc' => :'String',
        :'_64a39300_b672_413b_9d8c_42175f7e84dd' => :'String',
        :'ea6e632b_d8e1_420f_bd8f_ad50b067bad6' => :'String',
        :'_7491e52d_97e8_4759_8a63_c8ea8a75f822' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `OpenapiClient::InlineResponse2003EmbeddedConfigIdByConfigTypeId` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `OpenapiClient::InlineResponse2003EmbeddedConfigIdByConfigTypeId`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'d75e27f0_ebab_4567_8440_c24f02f2eca5')
        self.d75e27f0_ebab_4567_8440_c24f02f2eca5 = attributes[:'d75e27f0_ebab_4567_8440_c24f02f2eca5']
      end

      if attributes.key?(:'cf3962b1_a98e_4ade_ae25_cdc388e7feb3')
        self.cf3962b1_a98e_4ade_ae25_cdc388e7feb3 = attributes[:'cf3962b1_a98e_4ade_ae25_cdc388e7feb3']
      end

      if attributes.key?(:'_2c1998a1_32e2_4084_b20a_b580570f4fbf')
        self._2c1998a1_32e2_4084_b20a_b580570f4fbf = attributes[:'_2c1998a1_32e2_4084_b20a_b580570f4fbf']
      end

      if attributes.key?(:'_4c42c4db_f039_4a57_8264_5f57af512614')
        self._4c42c4db_f039_4a57_8264_5f57af512614 = attributes[:'_4c42c4db_f039_4a57_8264_5f57af512614']
      end

      if attributes.key?(:'_7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc')
        self._7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc = attributes[:'_7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc']
      end

      if attributes.key?(:'_714a918a_7935_4b4f_82c3_afbadcd9e59b')
        self._714a918a_7935_4b4f_82c3_afbadcd9e59b = attributes[:'_714a918a_7935_4b4f_82c3_afbadcd9e59b']
      end

      if attributes.key?(:'b1582680_ab7b_45d0_ac36_b00f82df8e79')
        self.b1582680_ab7b_45d0_ac36_b00f82df8e79 = attributes[:'b1582680_ab7b_45d0_ac36_b00f82df8e79']
      end

      if attributes.key?(:'e7f6ef8d_da57_444c_b677_f03974f5d8be')
        self.e7f6ef8d_da57_444c_b677_f03974f5d8be = attributes[:'e7f6ef8d_da57_444c_b677_f03974f5d8be']
      end

      if attributes.key?(:'_6fa5c2bc_b7f7_47f8_9229_e927722adb27')
        self._6fa5c2bc_b7f7_47f8_9229_e927722adb27 = attributes[:'_6fa5c2bc_b7f7_47f8_9229_e927722adb27']
      end

      if attributes.key?(:'_170c6b9b_f010_46a1_a2ee_cd6729e1f5dc')
        self._170c6b9b_f010_46a1_a2ee_cd6729e1f5dc = attributes[:'_170c6b9b_f010_46a1_a2ee_cd6729e1f5dc']
      end

      if attributes.key?(:'_64a39300_b672_413b_9d8c_42175f7e84dd')
        self._64a39300_b672_413b_9d8c_42175f7e84dd = attributes[:'_64a39300_b672_413b_9d8c_42175f7e84dd']
      end

      if attributes.key?(:'ea6e632b_d8e1_420f_bd8f_ad50b067bad6')
        self.ea6e632b_d8e1_420f_bd8f_ad50b067bad6 = attributes[:'ea6e632b_d8e1_420f_bd8f_ad50b067bad6']
      end

      if attributes.key?(:'_7491e52d_97e8_4759_8a63_c8ea8a75f822')
        self._7491e52d_97e8_4759_8a63_c8ea8a75f822 = attributes[:'_7491e52d_97e8_4759_8a63_c8ea8a75f822']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          d75e27f0_ebab_4567_8440_c24f02f2eca5 == o.d75e27f0_ebab_4567_8440_c24f02f2eca5 &&
          cf3962b1_a98e_4ade_ae25_cdc388e7feb3 == o.cf3962b1_a98e_4ade_ae25_cdc388e7feb3 &&
          _2c1998a1_32e2_4084_b20a_b580570f4fbf == o._2c1998a1_32e2_4084_b20a_b580570f4fbf &&
          _4c42c4db_f039_4a57_8264_5f57af512614 == o._4c42c4db_f039_4a57_8264_5f57af512614 &&
          _7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc == o._7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc &&
          _714a918a_7935_4b4f_82c3_afbadcd9e59b == o._714a918a_7935_4b4f_82c3_afbadcd9e59b &&
          b1582680_ab7b_45d0_ac36_b00f82df8e79 == o.b1582680_ab7b_45d0_ac36_b00f82df8e79 &&
          e7f6ef8d_da57_444c_b677_f03974f5d8be == o.e7f6ef8d_da57_444c_b677_f03974f5d8be &&
          _6fa5c2bc_b7f7_47f8_9229_e927722adb27 == o._6fa5c2bc_b7f7_47f8_9229_e927722adb27 &&
          _170c6b9b_f010_46a1_a2ee_cd6729e1f5dc == o._170c6b9b_f010_46a1_a2ee_cd6729e1f5dc &&
          _64a39300_b672_413b_9d8c_42175f7e84dd == o._64a39300_b672_413b_9d8c_42175f7e84dd &&
          ea6e632b_d8e1_420f_bd8f_ad50b067bad6 == o.ea6e632b_d8e1_420f_bd8f_ad50b067bad6 &&
          _7491e52d_97e8_4759_8a63_c8ea8a75f822 == o._7491e52d_97e8_4759_8a63_c8ea8a75f822
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [d75e27f0_ebab_4567_8440_c24f02f2eca5, cf3962b1_a98e_4ade_ae25_cdc388e7feb3, _2c1998a1_32e2_4084_b20a_b580570f4fbf, _4c42c4db_f039_4a57_8264_5f57af512614, _7cafedc5_17b8_4c1e_8b6f_0d9bc1b4b7bc, _714a918a_7935_4b4f_82c3_afbadcd9e59b, b1582680_ab7b_45d0_ac36_b00f82df8e79, e7f6ef8d_da57_444c_b677_f03974f5d8be, _6fa5c2bc_b7f7_47f8_9229_e927722adb27, _170c6b9b_f010_46a1_a2ee_cd6729e1f5dc, _64a39300_b672_413b_9d8c_42175f7e84dd, ea6e632b_d8e1_420f_bd8f_ad50b067bad6, _7491e52d_97e8_4759_8a63_c8ea8a75f822].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.openapi_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        OpenapiClient.const_get(type).build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end
        
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
