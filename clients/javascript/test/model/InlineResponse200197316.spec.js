/**
 * untitled API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5170
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UntitledApi);
  }
}(this, function(expect, UntitledApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UntitledApi.InlineResponse200197316();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse200197316', function() {
    it('should create an instance of InlineResponse200197316', function() {
      // uncomment below and update the code to test InlineResponse200197316
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be.a(UntitledApi.InlineResponse200197316);
    });

    it('should have the property zitiCliLinuxBinarySha1 (base name: "zitiCliLinuxBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxBinary (base name: "zitiTunnelLinuxBinary")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxBinarySha1 (base name: "zitiTunnelLinuxBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiControllerBinary (base name: "zitiControllerBinary")', function() {
      // uncomment below and update the code to test the property zitiControllerBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiCliLinuxBinaryMd5 (base name: "zitiCliLinuxBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxBinarySha1 (base name: "zitiRouterLinuxBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxArmBinaryMd5 (base name: "zitiRouterLinuxArmBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxArmBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxBinarySha256 (base name: "zitiRouterLinuxBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiCliLinuxArmBinary (base name: "zitiCliLinuxArmBinary")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxArmBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxBinaryMd5 (base name: "zitiRouterLinuxBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiWindowsDesktopEdge (base name: "zitiWindowsDesktopEdge")', function() {
      // uncomment below and update the code to test the property zitiWindowsDesktopEdge
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxArmBinarySha256 (base name: "zitiRouterLinuxArmBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxArmBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiMacDesktopEdge (base name: "zitiMacDesktopEdge")', function() {
      // uncomment below and update the code to test the property zitiMacDesktopEdge
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiControllerBinarySha1 (base name: "zitiControllerBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiControllerBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiControllerBinaryMd5 (base name: "zitiControllerBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiControllerBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiControllerBinarySha256 (base name: "zitiControllerBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiControllerBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiIosEdge (base name: "zitiIosEdge")', function() {
      // uncomment below and update the code to test the property zitiIosEdge
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiCliLinuxBinary (base name: "zitiCliLinuxBinary")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxArmBinarySha1 (base name: "zitiRouterLinuxArmBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxArmBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiVersion (base name: "zitiVersion")', function() {
      // uncomment below and update the code to test the property zitiVersion
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiFabricBinary (base name: "zitiFabricBinary")', function() {
      // uncomment below and update the code to test the property zitiFabricBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiCliLinuxArmBinarySha1 (base name: "zitiCliLinuxArmBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxArmBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxArmBinarySha1 (base name: "zitiTunnelLinuxArmBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxArmBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxArmBinary (base name: "zitiTunnelLinuxArmBinary")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxArmBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiCliLinuxArmBinarySha256 (base name: "zitiCliLinuxArmBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxArmBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiFabricBinarySha256 (base name: "zitiFabricBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiFabricBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxBinary (base name: "zitiRouterLinuxBinary")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxBinarySha256 (base name: "zitiTunnelLinuxBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiAndroidEdge (base name: "zitiAndroidEdge")', function() {
      // uncomment below and update the code to test the property zitiAndroidEdge
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxArmBinaryMd5 (base name: "zitiTunnelLinuxArmBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxArmBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiFabricBinaryMd5 (base name: "zitiFabricBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiFabricBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxBinaryMd5 (base name: "zitiTunnelLinuxBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiRouterLinuxArmBinary (base name: "zitiRouterLinuxArmBinary")', function() {
      // uncomment below and update the code to test the property zitiRouterLinuxArmBinary
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiFabricBinarySha1 (base name: "zitiFabricBinary.sha-1")', function() {
      // uncomment below and update the code to test the property zitiFabricBinarySha1
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiCliLinuxArmBinaryMd5 (base name: "zitiCliLinuxArmBinary.md5")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxArmBinaryMd5
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiTunnelLinuxArmBinarySha256 (base name: "zitiTunnelLinuxArmBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiTunnelLinuxArmBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property zitiCliLinuxBinarySha256 (base name: "zitiCliLinuxBinary.sha-256")', function() {
      // uncomment below and update the code to test the property zitiCliLinuxBinarySha256
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instane = new UntitledApi.InlineResponse200197316();
      //expect(instance).to.be();
    });

  });

}));
