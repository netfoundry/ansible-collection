/**
 * untitled API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5170
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UntitledApi);
  }
}(this, function(expect, UntitledApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UntitledApi.InlineResponse2008();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse2008', function() {
    it('should create an instance of InlineResponse2008', function() {
      // uncomment below and update the code to test InlineResponse2008
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be.a(UntitledApi.InlineResponse2008);
    });

    it('should have the property mfaEnabled (base name: "mfaEnabled")', function() {
      // uncomment below and update the code to test the property mfaEnabled
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property deletedAt (base name: "deletedAt")', function() {
      // uncomment below and update the code to test the property deletedAt
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property networkId (base name: "networkId")', function() {
      // uncomment below and update the code to test the property networkId
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property syncId (base name: "syncId")', function() {
      // uncomment below and update the code to test the property syncId
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property sessionIdentityId (base name: "sessionIdentityId")', function() {
      // uncomment below and update the code to test the property sessionIdentityId
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property osRelease (base name: "osRelease")', function() {
      // uncomment below and update the code to test the property osRelease
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property syncResourceId (base name: "syncResourceId")', function() {
      // uncomment below and update the code to test the property syncResourceId
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property zitiId (base name: "zitiId")', function() {
      // uncomment below and update the code to test the property zitiId
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property appVersion (base name: "appVersion")', function() {
      // uncomment below and update the code to test the property appVersion
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property branch (base name: "branch")', function() {
      // uncomment below and update the code to test the property branch
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property os (base name: "os")', function() {
      // uncomment below and update the code to test the property os
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property ownerIdentityId (base name: "ownerIdentityId")', function() {
      // uncomment below and update the code to test the property ownerIdentityId
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property hasEdgeRouterConnection (base name: "hasEdgeRouterConnection")', function() {
      // uncomment below and update the code to test the property hasEdgeRouterConnection
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property hasApiSession (base name: "hasApiSession")', function() {
      // uncomment below and update the code to test the property hasApiSession
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property revision (base name: "revision")', function() {
      // uncomment below and update the code to test the property revision
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property jwt (base name: "jwt")', function() {
      // uncomment below and update the code to test the property jwt
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property sessionActive (base name: "sessionActive")', function() {
      // uncomment below and update the code to test the property sessionActive
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property jwtExpiresAt (base name: "jwtExpiresAt")', function() {
      // uncomment below and update the code to test the property jwtExpiresAt
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property arch (base name: "arch")', function() {
      // uncomment below and update the code to test the property arch
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property createdBy (base name: "createdBy")', function() {
      // uncomment below and update the code to test the property createdBy
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property deletedBy (base name: "deletedBy")', function() {
      // uncomment below and update the code to test the property deletedBy
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property osVersion (base name: "osVersion")', function() {
      // uncomment below and update the code to test the property osVersion
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instane = new UntitledApi.InlineResponse2008();
      //expect(instance).to.be();
    });

  });

}));
