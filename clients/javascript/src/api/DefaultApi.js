/**
 * untitled API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5227
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject from '../model/InlineObject';
import InlineObject1 from '../model/InlineObject1';
import InlineObject2 from '../model/InlineObject2';
import InlineObject3 from '../model/InlineObject3';
import InlineObject4 from '../model/InlineObject4';
import InlineObject5 from '../model/InlineObject5';
import InlineObject6 from '../model/InlineObject6';
import InlineResponse200 from '../model/InlineResponse200';
import InlineResponse2001 from '../model/InlineResponse2001';
import InlineResponse20010 from '../model/InlineResponse20010';
import InlineResponse20011 from '../model/InlineResponse20011';
import InlineResponse20012 from '../model/InlineResponse20012';
import InlineResponse20013 from '../model/InlineResponse20013';
import InlineResponse20014 from '../model/InlineResponse20014';
import InlineResponse20015 from '../model/InlineResponse20015';
import InlineResponse20016 from '../model/InlineResponse20016';
import InlineResponse20017 from '../model/InlineResponse20017';
import InlineResponse20018 from '../model/InlineResponse20018';
import InlineResponse20019 from '../model/InlineResponse20019';
import InlineResponse2002 from '../model/InlineResponse2002';
import InlineResponse2003 from '../model/InlineResponse2003';
import InlineResponse2004 from '../model/InlineResponse2004';
import InlineResponse2004EmbeddedEdgeRouterPolicyList from '../model/InlineResponse2004EmbeddedEdgeRouterPolicyList';
import InlineResponse2005 from '../model/InlineResponse2005';
import InlineResponse2006 from '../model/InlineResponse2006';
import InlineResponse2007 from '../model/InlineResponse2007';
import InlineResponse2007EmbeddedEndpointList from '../model/InlineResponse2007EmbeddedEndpointList';
import InlineResponse2008 from '../model/InlineResponse2008';
import InlineResponse2009 from '../model/InlineResponse2009';
import InlineResponse202 from '../model/InlineResponse202';
import InlineResponse2021 from '../model/InlineResponse2021';
import InlineResponse2022 from '../model/InlineResponse2022';
import InlineResponse2023 from '../model/InlineResponse2023';
import InlineResponse2024 from '../model/InlineResponse2024';
import InlineResponse2025 from '../model/InlineResponse2025';
import InlineResponse500 from '../model/InlineResponse500';
import InlineResponse5001 from '../model/InlineResponse5001';

/**
* Default service.
* @module api/DefaultApi
* @version 5227
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the request4Q1qU3c4dk operation.
     * @callback module:api/DefaultApi~request4Q1qU3c4dkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20012} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Edge Router
     * @param {String} edgeRouterId 
     * @param {module:api/DefaultApi~request4Q1qU3c4dkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20012}
     */
    request4Q1qU3c4dk(edgeRouterId, callback) {
      let postBody = null;
      // verify the required parameter 'edgeRouterId' is set
      if (edgeRouterId === undefined || edgeRouterId === null) {
        throw new Error("Missing the required parameter 'edgeRouterId' when calling request4Q1qU3c4dk");
      }

      let pathParams = {
        'edgeRouterId': edgeRouterId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse20012;
      return this.apiClient.callApi(
        '/core/v2/edge-routers/{edgeRouterId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the request9sDuPizCiu operation.
     * @callback module:api/DefaultApi~request9sDuPizCiuCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an Endpoint
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject5} opts.inlineObject5 
     * @param {module:api/DefaultApi~request9sDuPizCiuCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    request9sDuPizCiu(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject5'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2008;
      return this.apiClient.callApi(
        '/core/v2/endpoints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestA8syyaPZnw operation.
     * @callback module:api/DefaultApi~requestA8syyaPZnwCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20019} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of Network product versions
     * @param {module:api/DefaultApi~requestA8syyaPZnwCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20019}
     */
    requestA8syyaPZnw(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20019;
      return this.apiClient.callApi(
        '/product-metadata/v2/download-urls.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestAYFhAQd5pn operation.
     * @callback module:api/DefaultApi~requestAYFhAQd5pnCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2007} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Endpoint
     * @param {module:api/DefaultApi~requestAYFhAQd5pnCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2007}
     */
    requestAYFhAQd5pn(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2007;
      return this.apiClient.callApi(
        '/core/v2/endpoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestAuarCsIhkJ operation.
     * @callback module:api/DefaultApi~requestAuarCsIhkJCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2009} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the registration information for an Edge Router
     * @param {String} edgeRouterId 
     * @param {module:api/DefaultApi~requestAuarCsIhkJCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2009}
     */
    requestAuarCsIhkJ(edgeRouterId, callback) {
      let postBody = null;
      // verify the required parameter 'edgeRouterId' is set
      if (edgeRouterId === undefined || edgeRouterId === null) {
        throw new Error("Missing the required parameter 'edgeRouterId' when calling requestAuarCsIhkJ");
      }

      let pathParams = {
        'edgeRouterId': edgeRouterId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2009;
      return this.apiClient.callApi(
        '/core/v2/edge-routers/{edgeRouterId}/registration-key', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestBtgg9ZlC0e operation.
     * @callback module:api/DefaultApi~requestBtgg9ZlC0eCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2004EmbeddedEdgeRouterPolicyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Edge Router Policy
     * @param {String} edgeRouterPolicyId 
     * @param {module:api/DefaultApi~requestBtgg9ZlC0eCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2004EmbeddedEdgeRouterPolicyList}
     */
    requestBtgg9ZlC0e(edgeRouterPolicyId, callback) {
      let postBody = null;
      // verify the required parameter 'edgeRouterPolicyId' is set
      if (edgeRouterPolicyId === undefined || edgeRouterPolicyId === null) {
        throw new Error("Missing the required parameter 'edgeRouterPolicyId' when calling requestBtgg9ZlC0e");
      }

      let pathParams = {
        'edgeRouterPolicyId': edgeRouterPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2004EmbeddedEdgeRouterPolicyList;
      return this.apiClient.callApi(
        '/core/v2/edge-router-policies/{edgeRouterPolicyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestE1IexRfvZg operation.
     * @callback module:api/DefaultApi~requestE1IexRfvZgCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2003} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of Services
     * @param {module:api/DefaultApi~requestE1IexRfvZgCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2003}
     */
    requestE1IexRfvZg(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2003;
      return this.apiClient.callApi(
        '/core/v2/services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestFWlFMQIDPX operation.
     * @callback module:api/DefaultApi~requestFWlFMQIDPXCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse202} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Network
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject} opts.inlineObject 
     * @param {module:api/DefaultApi~requestFWlFMQIDPXCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse202}
     */
    requestFWlFMQIDPX(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse202;
      return this.apiClient.callApi(
        '/core/v2/networks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestGijVCEoMlM operation.
     * @callback module:api/DefaultApi~requestGijVCEoMlMCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2006} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of AppWANs
     * @param {module:api/DefaultApi~requestGijVCEoMlMCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2006}
     */
    requestGijVCEoMlM(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2006;
      return this.apiClient.callApi(
        '/core/v2/app-wans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestHp1b9GiLax operation.
     * @callback module:api/DefaultApi~requestHp1b9GiLaxCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2004} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Edge Router Policy
     * @param {module:api/DefaultApi~requestHp1b9GiLaxCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2004}
     */
    requestHp1b9GiLax(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2004;
      return this.apiClient.callApi(
        '/core/v2/edge-router-policies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestIAJViYLviu operation.
     * @callback module:api/DefaultApi~requestIAJViYLviuCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2024} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Network
     * @param {String} networkId 
     * @param {module:api/DefaultApi~requestIAJViYLviuCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2024}
     */
    requestIAJViYLviu(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling requestIAJViYLviu");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2024;
      return this.apiClient.callApi(
        '/core/v2/networks/{networkId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestK9ajDJ8vUS operation.
     * @callback module:api/DefaultApi~requestK9ajDJ8vUSCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20017} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of Network Groups
     * @param {module:api/DefaultApi~requestK9ajDJ8vUSCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20017}
     */
    requestK9ajDJ8vUS(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20017;
      return this.apiClient.callApi(
        '/rest/v1/network-groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestKkeR9gNy25 operation.
     * @callback module:api/DefaultApi~requestKkeR9gNy25Callback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an AppWAN
     * @param {String} appWanId 
     * @param {module:api/DefaultApi~requestKkeR9gNy25Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    requestKkeR9gNy25(appWanId, callback) {
      let postBody = null;
      // verify the required parameter 'appWanId' is set
      if (appWanId === undefined || appWanId === null) {
        throw new Error("Missing the required parameter 'appWanId' when calling requestKkeR9gNy25");
      }

      let pathParams = {
        'appWanId': appWanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/core/v2/app-wans/{appWanId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestLOXfQSs8GE operation.
     * @callback module:api/DefaultApi~requestLOXfQSs8GECallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Network Configuration profile
     * e.g. small, medium, large
     * @param {module:api/DefaultApi~requestLOXfQSs8GECallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20015}
     */
    requestLOXfQSs8GE(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse20015;
      return this.apiClient.callApi(
        '/core/v2/network-configs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestLgKxU4ph9t operation.
     * @callback module:api/DefaultApi~requestLgKxU4ph9tCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2004EmbeddedEdgeRouterPolicyList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an Edge Router Policy
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject2} opts.inlineObject2 
     * @param {module:api/DefaultApi~requestLgKxU4ph9tCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2004EmbeddedEdgeRouterPolicyList}
     */
    requestLgKxU4ph9t(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject2'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2004EmbeddedEdgeRouterPolicyList;
      return this.apiClient.callApi(
        '/core/v2/edge-router-policies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestLopoFtq4ih operation.
     * @callback module:api/DefaultApi~requestLopoFtq4ihCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2021} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Service
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject1} opts.inlineObject1 
     * @param {module:api/DefaultApi~requestLopoFtq4ihCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2021}
     */
    requestLopoFtq4ih(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject1'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2021;
      return this.apiClient.callApi(
        '/core/v2/services', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestMpyYtIiS6x operation.
     * @callback module:api/DefaultApi~requestMpyYtIiS6xCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20016} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the identity of the caller's API account
     * @param {module:api/DefaultApi~requestMpyYtIiS6xCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20016}
     */
    requestMpyYtIiS6x(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20016;
      return this.apiClient.callApi(
        '/identity/v1/api-account-identities/self', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestN6GjgPLO4v operation.
     * @callback module:api/DefaultApi~requestN6GjgPLO4vCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20014} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Organization
     * @param {String} organizationId 
     * @param {module:api/DefaultApi~requestN6GjgPLO4vCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20014}
     */
    requestN6GjgPLO4v(organizationId, callback) {
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling requestN6GjgPLO4v");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20014;
      return this.apiClient.callApi(
        '/identity/v1/organizations/{organizationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestNXoV6K2f0Q operation.
     * @callback module:api/DefaultApi~requestNXoV6K2f0QCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an AppWAN
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject4} opts.inlineObject4 
     * @param {module:api/DefaultApi~requestNXoV6K2f0QCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    requestNXoV6K2f0Q(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject4'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/core/v2/app-wans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestOiIAfX2VUs operation.
     * @callback module:api/DefaultApi~requestOiIAfX2VUsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of Networks
     * @param {module:api/DefaultApi~requestOiIAfX2VUsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2001}
     */
    requestOiIAfX2VUs(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2001;
      return this.apiClient.callApi(
        '/core/v2/networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestPBaaiO3B0d operation.
     * @callback module:api/DefaultApi~requestPBaaiO3B0dCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2022} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Service
     * @param {String} serviceId 
     * @param {module:api/DefaultApi~requestPBaaiO3B0dCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2022}
     */
    requestPBaaiO3B0d(serviceId, callback) {
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling requestPBaaiO3B0d");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json', 'application/json'];
      let returnType = InlineResponse2022;
      return this.apiClient.callApi(
        '/core/v2/services/{serviceId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestPyR6aUP5mi operation.
     * @callback module:api/DefaultApi~requestPyR6aUP5miCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2025} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an Edge Router
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject6} opts.inlineObject6 
     * @param {module:api/DefaultApi~requestPyR6aUP5miCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2025}
     */
    requestPyR6aUP5mi(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject6'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2025;
      return this.apiClient.callApi(
        '/core/v2/edge-routers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestQ0b3cbDW8S operation.
     * @callback module:api/DefaultApi~requestQ0b3cbDW8SCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20010} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of Posture Checks
     * @param {module:api/DefaultApi~requestQ0b3cbDW8SCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20010}
     */
    requestQ0b3cbDW8S(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse20010;
      return this.apiClient.callApi(
        '/core/v2/posture-checks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestTeqMGeER5F operation.
     * @callback module:api/DefaultApi~requestTeqMGeER5FCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20013} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Network
     * @param {String} networkId 
     * @param {module:api/DefaultApi~requestTeqMGeER5FCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20013}
     */
    requestTeqMGeER5F(networkId, callback) {
      let postBody = null;
      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling requestTeqMGeER5F");
      }

      let pathParams = {
        'networkId': networkId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse20013;
      return this.apiClient.callApi(
        '/core/v2/networks/{networkId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestTsyuwlAejK operation.
     * @callback module:api/DefaultApi~requestTsyuwlAejKCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2007EmbeddedEndpointList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Endpoint
     * @param {String} endpointId 
     * @param {module:api/DefaultApi~requestTsyuwlAejKCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2007EmbeddedEndpointList}
     */
    requestTsyuwlAejK(endpointId, callback) {
      let postBody = null;
      // verify the required parameter 'endpointId' is set
      if (endpointId === undefined || endpointId === null) {
        throw new Error("Missing the required parameter 'endpointId' when calling requestTsyuwlAejK");
      }

      let pathParams = {
        'endpointId': endpointId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2007EmbeddedEndpointList;
      return this.apiClient.callApi(
        '/core/v2/endpoints/{endpointId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestVIzB1k6Uqb operation.
     * @callback module:api/DefaultApi~requestVIzB1k6UqbCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2023} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change some properties of a Service
     * @param {String} serviceId 
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject3} opts.inlineObject3 
     * @param {module:api/DefaultApi~requestVIzB1k6UqbCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2023}
     */
    requestVIzB1k6Uqb(serviceId, opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject3'];
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling requestVIzB1k6Uqb");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2023;
      return this.apiClient.callApi(
        '/core/v2/services/{serviceId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestVeJCBUR9iO operation.
     * @callback module:api/DefaultApi~requestVeJCBUR9iOCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20011} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Network Group
     * @param {String} networkGroupId 
     * @param {module:api/DefaultApi~requestVeJCBUR9iOCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20011}
     */
    requestVeJCBUR9iO(networkGroupId, callback) {
      let postBody = null;
      // verify the required parameter 'networkGroupId' is set
      if (networkGroupId === undefined || networkGroupId === null) {
        throw new Error("Missing the required parameter 'networkGroupId' when calling requestVeJCBUR9iO");
      }

      let pathParams = {
        'networkGroupId': networkGroupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20011;
      return this.apiClient.callApi(
        '/rest/v1/network-groups/{networkGroupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestVfuaDMeTRP operation.
     * @callback module:api/DefaultApi~requestVfuaDMeTRPCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2002} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of data centers
     * @param {module:api/DefaultApi~requestVfuaDMeTRPCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2002}
     */
    requestVfuaDMeTRP(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2002;
      return this.apiClient.callApi(
        '/core/v2/data-centers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestYLsf4m9TTT operation.
     * @callback module:api/DefaultApi~requestYLsf4m9TTTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2005} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Service
     * @param {String} serviceId 
     * @param {module:api/DefaultApi~requestYLsf4m9TTTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2005}
     */
    requestYLsf4m9TTT(serviceId, callback) {
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling requestYLsf4m9TTT");
      }

      let pathParams = {
        'serviceId': serviceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse2005;
      return this.apiClient.callApi(
        '/core/v2/services/{serviceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestYhzDAw1Ks4 operation.
     * @callback module:api/DefaultApi~requestYhzDAw1Ks4Callback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20018} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an Edge Router
     * @param {module:api/DefaultApi~requestYhzDAw1Ks4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20018}
     */
    requestYhzDAw1Ks4(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/hal+json'];
      let returnType = InlineResponse20018;
      return this.apiClient.callApi(
        '/core/v2/edge-routers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
