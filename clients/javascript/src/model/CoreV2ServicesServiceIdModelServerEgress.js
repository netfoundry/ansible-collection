/**
 * untitled API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5229
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnyType from './AnyType';

/**
 * The CoreV2ServicesServiceIdModelServerEgress model module.
 * @module model/CoreV2ServicesServiceIdModelServerEgress
 * @version 5229
 */
class CoreV2ServicesServiceIdModelServerEgress {
    /**
     * Constructs a new <code>CoreV2ServicesServiceIdModelServerEgress</code>.
     * @alias module:model/CoreV2ServicesServiceIdModelServerEgress
     * @param dialInterceptAddress {module:model/AnyType} 
     * @param dialInterceptPort {module:model/AnyType} 
     * @param port {Number} 
     * @param dialInterceptProtocol {Boolean} 
     * @param address {String} 
     * @param protocol {module:model/AnyType} 
     */
    constructor(dialInterceptAddress, dialInterceptPort, port, dialInterceptProtocol, address, protocol) { 
        
        CoreV2ServicesServiceIdModelServerEgress.initialize(this, dialInterceptAddress, dialInterceptPort, port, dialInterceptProtocol, address, protocol);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dialInterceptAddress, dialInterceptPort, port, dialInterceptProtocol, address, protocol) { 
        obj['dialInterceptAddress'] = dialInterceptAddress;
        obj['dialInterceptPort'] = dialInterceptPort;
        obj['port'] = port;
        obj['dialInterceptProtocol'] = dialInterceptProtocol;
        obj['address'] = address;
        obj['protocol'] = protocol;
    }

    /**
     * Constructs a <code>CoreV2ServicesServiceIdModelServerEgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CoreV2ServicesServiceIdModelServerEgress} obj Optional instance to populate.
     * @return {module:model/CoreV2ServicesServiceIdModelServerEgress} The populated <code>CoreV2ServicesServiceIdModelServerEgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CoreV2ServicesServiceIdModelServerEgress();

            if (data.hasOwnProperty('dialInterceptAddress')) {
                obj['dialInterceptAddress'] = ApiClient.convertToType(data['dialInterceptAddress'], AnyType);
            }
            if (data.hasOwnProperty('dialInterceptPort')) {
                obj['dialInterceptPort'] = ApiClient.convertToType(data['dialInterceptPort'], AnyType);
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('dialInterceptProtocol')) {
                obj['dialInterceptProtocol'] = ApiClient.convertToType(data['dialInterceptProtocol'], 'Boolean');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], AnyType);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/AnyType} dialInterceptAddress
 */
CoreV2ServicesServiceIdModelServerEgress.prototype['dialInterceptAddress'] = undefined;

/**
 * @member {module:model/AnyType} dialInterceptPort
 */
CoreV2ServicesServiceIdModelServerEgress.prototype['dialInterceptPort'] = undefined;

/**
 * @member {Number} port
 */
CoreV2ServicesServiceIdModelServerEgress.prototype['port'] = undefined;

/**
 * @member {Boolean} dialInterceptProtocol
 */
CoreV2ServicesServiceIdModelServerEgress.prototype['dialInterceptProtocol'] = undefined;

/**
 * @member {String} address
 */
CoreV2ServicesServiceIdModelServerEgress.prototype['address'] = undefined;

/**
 * @member {module:model/AnyType} protocol
 */
CoreV2ServicesServiceIdModelServerEgress.prototype['protocol'] = undefined;






export default CoreV2ServicesServiceIdModelServerEgress;

