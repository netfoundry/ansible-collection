/* 
 * untitled API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5170
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CoreV2ServicesServiceIdModelClientIngress
    /// </summary>
    [DataContract]
    public partial class CoreV2ServicesServiceIdModelClientIngress :  IEquatable<CoreV2ServicesServiceIdModelClientIngress>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreV2ServicesServiceIdModelClientIngress" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CoreV2ServicesServiceIdModelClientIngress() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoreV2ServicesServiceIdModelClientIngress" /> class.
        /// </summary>
        /// <param name="addresses">addresses (required).</param>
        /// <param name="ports">ports (required).</param>
        /// <param name="protocols">protocols (required).</param>
        public CoreV2ServicesServiceIdModelClientIngress(List<string> addresses = default(List<string>), List<CoreV2ServicesModelClientIngressPorts> ports = default(List<CoreV2ServicesModelClientIngressPorts>), List<string> protocols = default(List<string>))
        {
            // to ensure "addresses" is required (not null)
            if (addresses == null)
            {
                throw new InvalidDataException("addresses is a required property for CoreV2ServicesServiceIdModelClientIngress and cannot be null");
            }
            else
            {
                this.Addresses = addresses;
            }
            
            // to ensure "ports" is required (not null)
            if (ports == null)
            {
                throw new InvalidDataException("ports is a required property for CoreV2ServicesServiceIdModelClientIngress and cannot be null");
            }
            else
            {
                this.Ports = ports;
            }
            
            // to ensure "protocols" is required (not null)
            if (protocols == null)
            {
                throw new InvalidDataException("protocols is a required property for CoreV2ServicesServiceIdModelClientIngress and cannot be null");
            }
            else
            {
                this.Protocols = protocols;
            }
            
        }
        
        /// <summary>
        /// Gets or Sets Addresses
        /// </summary>
        [DataMember(Name="addresses", EmitDefaultValue=true)]
        public List<string> Addresses { get; set; }

        /// <summary>
        /// Gets or Sets Ports
        /// </summary>
        [DataMember(Name="ports", EmitDefaultValue=true)]
        public List<CoreV2ServicesModelClientIngressPorts> Ports { get; set; }

        /// <summary>
        /// Gets or Sets Protocols
        /// </summary>
        [DataMember(Name="protocols", EmitDefaultValue=true)]
        public List<string> Protocols { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CoreV2ServicesServiceIdModelClientIngress {\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("  Ports: ").Append(Ports).Append("\n");
            sb.Append("  Protocols: ").Append(Protocols).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CoreV2ServicesServiceIdModelClientIngress);
        }

        /// <summary>
        /// Returns true if CoreV2ServicesServiceIdModelClientIngress instances are equal
        /// </summary>
        /// <param name="input">Instance of CoreV2ServicesServiceIdModelClientIngress to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CoreV2ServicesServiceIdModelClientIngress input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Addresses == input.Addresses ||
                    this.Addresses != null &&
                    input.Addresses != null &&
                    this.Addresses.SequenceEqual(input.Addresses)
                ) && 
                (
                    this.Ports == input.Ports ||
                    this.Ports != null &&
                    input.Ports != null &&
                    this.Ports.SequenceEqual(input.Ports)
                ) && 
                (
                    this.Protocols == input.Protocols ||
                    this.Protocols != null &&
                    input.Protocols != null &&
                    this.Protocols.SequenceEqual(input.Protocols)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Addresses != null)
                    hashCode = hashCode * 59 + this.Addresses.GetHashCode();
                if (this.Ports != null)
                    hashCode = hashCode * 59 + this.Ports.GetHashCode();
                if (this.Protocols != null)
                    hashCode = hashCode * 59 + this.Protocols.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
