/* 
 * untitled API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5229
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// InlineResponse20016
    /// </summary>
    [DataContract]
    public partial class InlineResponse20016 :  IEquatable<InlineResponse20016>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20016" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InlineResponse20016() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20016" /> class.
        /// </summary>
        /// <param name="deletedAt">deletedAt (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="updatedAt">updatedAt (required).</param>
        /// <param name="email">email (required).</param>
        /// <param name="description">description (required).</param>
        /// <param name="awsCognitoClientId">awsCognitoClientId (required).</param>
        /// <param name="auth0ClientId">auth0ClientId (required).</param>
        /// <param name="id">id (required).</param>
        /// <param name="contactEmail">contactEmail (required).</param>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="organizationId">organizationId (required).</param>
        /// <param name="tenantId">tenantId (required).</param>
        /// <param name="type">type (required).</param>
        /// <param name="authenticationUrl">authenticationUrl (required).</param>
        /// <param name="active">active (required).</param>
        public InlineResponse20016(AnyType deletedAt = default(AnyType), string name = default(string), AnyType updatedAt = default(AnyType), string email = default(string), string description = default(string), string awsCognitoClientId = default(string), AnyType auth0ClientId = default(AnyType), string id = default(string), string contactEmail = default(string), InlineResponse20014UpdatedAt createdAt = default(InlineResponse20014UpdatedAt), string organizationId = default(string), string tenantId = default(string), string type = default(string), string authenticationUrl = default(string), bool active = default(bool))
        {
            // to ensure "deletedAt" is required (not null)
            if (deletedAt == null)
            {
                throw new InvalidDataException("deletedAt is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.DeletedAt = deletedAt;
            }
            
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.Name = name;
            }
            
            // to ensure "updatedAt" is required (not null)
            if (updatedAt == null)
            {
                throw new InvalidDataException("updatedAt is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.UpdatedAt = updatedAt;
            }
            
            // to ensure "email" is required (not null)
            if (email == null)
            {
                throw new InvalidDataException("email is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.Email = email;
            }
            
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new InvalidDataException("description is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.Description = description;
            }
            
            // to ensure "awsCognitoClientId" is required (not null)
            if (awsCognitoClientId == null)
            {
                throw new InvalidDataException("awsCognitoClientId is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.AwsCognitoClientId = awsCognitoClientId;
            }
            
            // to ensure "auth0ClientId" is required (not null)
            if (auth0ClientId == null)
            {
                throw new InvalidDataException("auth0ClientId is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.Auth0ClientId = auth0ClientId;
            }
            
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new InvalidDataException("id is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.Id = id;
            }
            
            // to ensure "contactEmail" is required (not null)
            if (contactEmail == null)
            {
                throw new InvalidDataException("contactEmail is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.ContactEmail = contactEmail;
            }
            
            // to ensure "createdAt" is required (not null)
            if (createdAt == null)
            {
                throw new InvalidDataException("createdAt is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.CreatedAt = createdAt;
            }
            
            // to ensure "organizationId" is required (not null)
            if (organizationId == null)
            {
                throw new InvalidDataException("organizationId is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.OrganizationId = organizationId;
            }
            
            // to ensure "tenantId" is required (not null)
            if (tenantId == null)
            {
                throw new InvalidDataException("tenantId is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.TenantId = tenantId;
            }
            
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new InvalidDataException("type is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.Type = type;
            }
            
            // to ensure "authenticationUrl" is required (not null)
            if (authenticationUrl == null)
            {
                throw new InvalidDataException("authenticationUrl is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.AuthenticationUrl = authenticationUrl;
            }
            
            // to ensure "active" is required (not null)
            if (active == null)
            {
                throw new InvalidDataException("active is a required property for InlineResponse20016 and cannot be null");
            }
            else
            {
                this.Active = active;
            }
            
        }
        
        /// <summary>
        /// Gets or Sets DeletedAt
        /// </summary>
        [DataMember(Name="deletedAt", EmitDefaultValue=true)]
        public AnyType DeletedAt { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name="updatedAt", EmitDefaultValue=true)]
        public AnyType UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets AwsCognitoClientId
        /// </summary>
        [DataMember(Name="awsCognitoClientId", EmitDefaultValue=true)]
        public string AwsCognitoClientId { get; set; }

        /// <summary>
        /// Gets or Sets Auth0ClientId
        /// </summary>
        [DataMember(Name="auth0ClientId", EmitDefaultValue=true)]
        public AnyType Auth0ClientId { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ContactEmail
        /// </summary>
        [DataMember(Name="contactEmail", EmitDefaultValue=true)]
        public string ContactEmail { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="createdAt", EmitDefaultValue=true)]
        public InlineResponse20014UpdatedAt CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationId
        /// </summary>
        [DataMember(Name="organizationId", EmitDefaultValue=true)]
        public string OrganizationId { get; set; }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name="tenantId", EmitDefaultValue=true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets AuthenticationUrl
        /// </summary>
        [DataMember(Name="authenticationUrl", EmitDefaultValue=true)]
        public string AuthenticationUrl { get; set; }

        /// <summary>
        /// Gets or Sets Active
        /// </summary>
        [DataMember(Name="active", EmitDefaultValue=true)]
        public bool Active { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20016 {\n");
            sb.Append("  DeletedAt: ").Append(DeletedAt).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  AwsCognitoClientId: ").Append(AwsCognitoClientId).Append("\n");
            sb.Append("  Auth0ClientId: ").Append(Auth0ClientId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ContactEmail: ").Append(ContactEmail).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  OrganizationId: ").Append(OrganizationId).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  AuthenticationUrl: ").Append(AuthenticationUrl).Append("\n");
            sb.Append("  Active: ").Append(Active).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20016);
        }

        /// <summary>
        /// Returns true if InlineResponse20016 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20016 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20016 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DeletedAt == input.DeletedAt ||
                    (this.DeletedAt != null &&
                    this.DeletedAt.Equals(input.DeletedAt))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.AwsCognitoClientId == input.AwsCognitoClientId ||
                    (this.AwsCognitoClientId != null &&
                    this.AwsCognitoClientId.Equals(input.AwsCognitoClientId))
                ) && 
                (
                    this.Auth0ClientId == input.Auth0ClientId ||
                    (this.Auth0ClientId != null &&
                    this.Auth0ClientId.Equals(input.Auth0ClientId))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ContactEmail == input.ContactEmail ||
                    (this.ContactEmail != null &&
                    this.ContactEmail.Equals(input.ContactEmail))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.OrganizationId == input.OrganizationId ||
                    (this.OrganizationId != null &&
                    this.OrganizationId.Equals(input.OrganizationId))
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.AuthenticationUrl == input.AuthenticationUrl ||
                    (this.AuthenticationUrl != null &&
                    this.AuthenticationUrl.Equals(input.AuthenticationUrl))
                ) && 
                (
                    this.Active == input.Active ||
                    (this.Active != null &&
                    this.Active.Equals(input.Active))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DeletedAt != null)
                    hashCode = hashCode * 59 + this.DeletedAt.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.AwsCognitoClientId != null)
                    hashCode = hashCode * 59 + this.AwsCognitoClientId.GetHashCode();
                if (this.Auth0ClientId != null)
                    hashCode = hashCode * 59 + this.Auth0ClientId.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ContactEmail != null)
                    hashCode = hashCode * 59 + this.ContactEmail.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.OrganizationId != null)
                    hashCode = hashCode * 59 + this.OrganizationId.GetHashCode();
                if (this.TenantId != null)
                    hashCode = hashCode * 59 + this.TenantId.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.AuthenticationUrl != null)
                    hashCode = hashCode * 59 + this.AuthenticationUrl.GetHashCode();
                if (this.Active != null)
                    hashCode = hashCode * 59 + this.Active.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
