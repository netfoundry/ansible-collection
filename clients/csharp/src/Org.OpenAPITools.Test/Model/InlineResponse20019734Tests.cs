/* 
 * untitled API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5170
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing InlineResponse20019734
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InlineResponse20019734Tests
    {
        // TODO uncomment below to declare an instance variable for InlineResponse20019734
        //private InlineResponse20019734 instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of InlineResponse20019734
            //instance = new InlineResponse20019734();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InlineResponse20019734
        /// </summary>
        [Test]
        public void InlineResponse20019734InstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" InlineResponse20019734
            //Assert.IsInstanceOf(typeof(InlineResponse20019734), instance);
        }


        /// <summary>
        /// Test the property 'ZitiCliLinuxBinarySha1'
        /// </summary>
        [Test]
        public void ZitiCliLinuxBinarySha1Test()
        {
            // TODO unit test for the property 'ZitiCliLinuxBinarySha1'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxBinary'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxBinaryTest()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxBinary'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxBinarySha1'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxBinarySha1Test()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxBinarySha1'
        }
        /// <summary>
        /// Test the property 'ZitiControllerBinary'
        /// </summary>
        [Test]
        public void ZitiControllerBinaryTest()
        {
            // TODO unit test for the property 'ZitiControllerBinary'
        }
        /// <summary>
        /// Test the property 'ZitiCliLinuxBinaryMd5'
        /// </summary>
        [Test]
        public void ZitiCliLinuxBinaryMd5Test()
        {
            // TODO unit test for the property 'ZitiCliLinuxBinaryMd5'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxBinarySha1'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxBinarySha1Test()
        {
            // TODO unit test for the property 'ZitiRouterLinuxBinarySha1'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxArmBinaryMd5'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxArmBinaryMd5Test()
        {
            // TODO unit test for the property 'ZitiRouterLinuxArmBinaryMd5'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxBinarySha256'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxBinarySha256Test()
        {
            // TODO unit test for the property 'ZitiRouterLinuxBinarySha256'
        }
        /// <summary>
        /// Test the property 'ZitiCliLinuxArmBinary'
        /// </summary>
        [Test]
        public void ZitiCliLinuxArmBinaryTest()
        {
            // TODO unit test for the property 'ZitiCliLinuxArmBinary'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxBinaryMd5'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxBinaryMd5Test()
        {
            // TODO unit test for the property 'ZitiRouterLinuxBinaryMd5'
        }
        /// <summary>
        /// Test the property 'ZitiWindowsDesktopEdge'
        /// </summary>
        [Test]
        public void ZitiWindowsDesktopEdgeTest()
        {
            // TODO unit test for the property 'ZitiWindowsDesktopEdge'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxArmBinarySha256'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxArmBinarySha256Test()
        {
            // TODO unit test for the property 'ZitiRouterLinuxArmBinarySha256'
        }
        /// <summary>
        /// Test the property 'ZitiMacDesktopEdge'
        /// </summary>
        [Test]
        public void ZitiMacDesktopEdgeTest()
        {
            // TODO unit test for the property 'ZitiMacDesktopEdge'
        }
        /// <summary>
        /// Test the property 'ZitiControllerBinarySha1'
        /// </summary>
        [Test]
        public void ZitiControllerBinarySha1Test()
        {
            // TODO unit test for the property 'ZitiControllerBinarySha1'
        }
        /// <summary>
        /// Test the property 'ZitiControllerBinaryMd5'
        /// </summary>
        [Test]
        public void ZitiControllerBinaryMd5Test()
        {
            // TODO unit test for the property 'ZitiControllerBinaryMd5'
        }
        /// <summary>
        /// Test the property 'ZitiControllerBinarySha256'
        /// </summary>
        [Test]
        public void ZitiControllerBinarySha256Test()
        {
            // TODO unit test for the property 'ZitiControllerBinarySha256'
        }
        /// <summary>
        /// Test the property 'ZitiIosEdge'
        /// </summary>
        [Test]
        public void ZitiIosEdgeTest()
        {
            // TODO unit test for the property 'ZitiIosEdge'
        }
        /// <summary>
        /// Test the property 'ZitiCliLinuxBinary'
        /// </summary>
        [Test]
        public void ZitiCliLinuxBinaryTest()
        {
            // TODO unit test for the property 'ZitiCliLinuxBinary'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxArmBinarySha1'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxArmBinarySha1Test()
        {
            // TODO unit test for the property 'ZitiRouterLinuxArmBinarySha1'
        }
        /// <summary>
        /// Test the property 'ZitiVersion'
        /// </summary>
        [Test]
        public void ZitiVersionTest()
        {
            // TODO unit test for the property 'ZitiVersion'
        }
        /// <summary>
        /// Test the property 'ZitiCliLinuxArmBinarySha1'
        /// </summary>
        [Test]
        public void ZitiCliLinuxArmBinarySha1Test()
        {
            // TODO unit test for the property 'ZitiCliLinuxArmBinarySha1'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxArmBinarySha1'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxArmBinarySha1Test()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxArmBinarySha1'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxArmBinary'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxArmBinaryTest()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxArmBinary'
        }
        /// <summary>
        /// Test the property 'ZitiCliLinuxArmBinarySha256'
        /// </summary>
        [Test]
        public void ZitiCliLinuxArmBinarySha256Test()
        {
            // TODO unit test for the property 'ZitiCliLinuxArmBinarySha256'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxBinary'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxBinaryTest()
        {
            // TODO unit test for the property 'ZitiRouterLinuxBinary'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxBinarySha256'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxBinarySha256Test()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxBinarySha256'
        }
        /// <summary>
        /// Test the property 'ZitiAndroidEdge'
        /// </summary>
        [Test]
        public void ZitiAndroidEdgeTest()
        {
            // TODO unit test for the property 'ZitiAndroidEdge'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxArmBinaryMd5'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxArmBinaryMd5Test()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxArmBinaryMd5'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxBinaryMd5'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxBinaryMd5Test()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxBinaryMd5'
        }
        /// <summary>
        /// Test the property 'ZitiRouterLinuxArmBinary'
        /// </summary>
        [Test]
        public void ZitiRouterLinuxArmBinaryTest()
        {
            // TODO unit test for the property 'ZitiRouterLinuxArmBinary'
        }
        /// <summary>
        /// Test the property 'ZitiCliLinuxArmBinaryMd5'
        /// </summary>
        [Test]
        public void ZitiCliLinuxArmBinaryMd5Test()
        {
            // TODO unit test for the property 'ZitiCliLinuxArmBinaryMd5'
        }
        /// <summary>
        /// Test the property 'ZitiTunnelLinuxArmBinarySha256'
        /// </summary>
        [Test]
        public void ZitiTunnelLinuxArmBinarySha256Test()
        {
            // TODO unit test for the property 'ZitiTunnelLinuxArmBinarySha256'
        }
        /// <summary>
        /// Test the property 'ZitiCliLinuxBinarySha256'
        /// </summary>
        [Test]
        public void ZitiCliLinuxBinarySha256Test()
        {
            // TODO unit test for the property 'ZitiCliLinuxBinarySha256'
        }
        /// <summary>
        /// Test the property 'Active'
        /// </summary>
        [Test]
        public void ActiveTest()
        {
            // TODO unit test for the property 'Active'
        }

    }

}
