/* 
 * untitled API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5170
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' DefaultApi
            //Assert.IsInstanceOf(typeof(DefaultApi), instance);
        }

        
        /// <summary>
        /// Test Request4Q1qU3c4dk
        /// </summary>
        [Test]
        public void Request4Q1qU3c4dkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string edgeRouterId = null;
            //var response = instance.Request4Q1qU3c4dk(edgeRouterId);
            //Assert.IsInstanceOf(typeof(InlineResponse20012), response, "response is InlineResponse20012");
        }
        
        /// <summary>
        /// Test Request9sDuPizCiu
        /// </summary>
        [Test]
        public void Request9sDuPizCiuTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject5 inlineObject5 = null;
            //var response = instance.Request9sDuPizCiu(inlineObject5);
            //Assert.IsInstanceOf(typeof(InlineResponse2008), response, "response is InlineResponse2008");
        }
        
        /// <summary>
        /// Test RequestA8syyaPZnw
        /// </summary>
        [Test]
        public void RequestA8syyaPZnwTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestA8syyaPZnw();
            //Assert.IsInstanceOf(typeof(InlineResponse20019), response, "response is InlineResponse20019");
        }
        
        /// <summary>
        /// Test RequestAYFhAQd5pn
        /// </summary>
        [Test]
        public void RequestAYFhAQd5pnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestAYFhAQd5pn();
            //Assert.IsInstanceOf(typeof(InlineResponse2007), response, "response is InlineResponse2007");
        }
        
        /// <summary>
        /// Test RequestAuarCsIhkJ
        /// </summary>
        [Test]
        public void RequestAuarCsIhkJTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string edgeRouterId = null;
            //var response = instance.RequestAuarCsIhkJ(edgeRouterId);
            //Assert.IsInstanceOf(typeof(InlineResponse2009), response, "response is InlineResponse2009");
        }
        
        /// <summary>
        /// Test RequestBtgg9ZlC0e
        /// </summary>
        [Test]
        public void RequestBtgg9ZlC0eTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string edgeRouterPolicyId = null;
            //var response = instance.RequestBtgg9ZlC0e(edgeRouterPolicyId);
            //Assert.IsInstanceOf(typeof(InlineResponse2004EmbeddedEdgeRouterPolicyList), response, "response is InlineResponse2004EmbeddedEdgeRouterPolicyList");
        }
        
        /// <summary>
        /// Test RequestE1IexRfvZg
        /// </summary>
        [Test]
        public void RequestE1IexRfvZgTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestE1IexRfvZg();
            //Assert.IsInstanceOf(typeof(InlineResponse2003), response, "response is InlineResponse2003");
        }
        
        /// <summary>
        /// Test RequestFWlFMQIDPX
        /// </summary>
        [Test]
        public void RequestFWlFMQIDPXTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject inlineObject = null;
            //var response = instance.RequestFWlFMQIDPX(inlineObject);
            //Assert.IsInstanceOf(typeof(InlineResponse202), response, "response is InlineResponse202");
        }
        
        /// <summary>
        /// Test RequestGijVCEoMlM
        /// </summary>
        [Test]
        public void RequestGijVCEoMlMTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestGijVCEoMlM();
            //Assert.IsInstanceOf(typeof(InlineResponse2006), response, "response is InlineResponse2006");
        }
        
        /// <summary>
        /// Test RequestHp1b9GiLax
        /// </summary>
        [Test]
        public void RequestHp1b9GiLaxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestHp1b9GiLax();
            //Assert.IsInstanceOf(typeof(InlineResponse2004), response, "response is InlineResponse2004");
        }
        
        /// <summary>
        /// Test RequestIAJViYLviu
        /// </summary>
        [Test]
        public void RequestIAJViYLviuTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //var response = instance.RequestIAJViYLviu(networkId);
            //Assert.IsInstanceOf(typeof(InlineResponse2024), response, "response is InlineResponse2024");
        }
        
        /// <summary>
        /// Test RequestK9ajDJ8vUS
        /// </summary>
        [Test]
        public void RequestK9ajDJ8vUSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestK9ajDJ8vUS();
            //Assert.IsInstanceOf(typeof(InlineResponse20017), response, "response is InlineResponse20017");
        }
        
        /// <summary>
        /// Test RequestKkeR9gNy25
        /// </summary>
        [Test]
        public void RequestKkeR9gNy25Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appWanId = null;
            //var response = instance.RequestKkeR9gNy25(appWanId);
            //Assert.IsInstanceOf(typeof(InlineResponse200), response, "response is InlineResponse200");
        }
        
        /// <summary>
        /// Test RequestLOXfQSs8GE
        /// </summary>
        [Test]
        public void RequestLOXfQSs8GETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestLOXfQSs8GE();
            //Assert.IsInstanceOf(typeof(InlineResponse20015), response, "response is InlineResponse20015");
        }
        
        /// <summary>
        /// Test RequestLgKxU4ph9t
        /// </summary>
        [Test]
        public void RequestLgKxU4ph9tTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject2 inlineObject2 = null;
            //var response = instance.RequestLgKxU4ph9t(inlineObject2);
            //Assert.IsInstanceOf(typeof(InlineResponse2004EmbeddedEdgeRouterPolicyList), response, "response is InlineResponse2004EmbeddedEdgeRouterPolicyList");
        }
        
        /// <summary>
        /// Test RequestLopoFtq4ih
        /// </summary>
        [Test]
        public void RequestLopoFtq4ihTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject1 inlineObject1 = null;
            //var response = instance.RequestLopoFtq4ih(inlineObject1);
            //Assert.IsInstanceOf(typeof(InlineResponse2021), response, "response is InlineResponse2021");
        }
        
        /// <summary>
        /// Test RequestMpyYtIiS6x
        /// </summary>
        [Test]
        public void RequestMpyYtIiS6xTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestMpyYtIiS6x();
            //Assert.IsInstanceOf(typeof(InlineResponse20016), response, "response is InlineResponse20016");
        }
        
        /// <summary>
        /// Test RequestN6GjgPLO4v
        /// </summary>
        [Test]
        public void RequestN6GjgPLO4vTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //var response = instance.RequestN6GjgPLO4v(organizationId);
            //Assert.IsInstanceOf(typeof(InlineResponse20014), response, "response is InlineResponse20014");
        }
        
        /// <summary>
        /// Test RequestNXoV6K2f0Q
        /// </summary>
        [Test]
        public void RequestNXoV6K2f0QTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject4 inlineObject4 = null;
            //var response = instance.RequestNXoV6K2f0Q(inlineObject4);
            //Assert.IsInstanceOf(typeof(InlineResponse200), response, "response is InlineResponse200");
        }
        
        /// <summary>
        /// Test RequestOiIAfX2VUs
        /// </summary>
        [Test]
        public void RequestOiIAfX2VUsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestOiIAfX2VUs();
            //Assert.IsInstanceOf(typeof(InlineResponse2001), response, "response is InlineResponse2001");
        }
        
        /// <summary>
        /// Test RequestPBaaiO3B0d
        /// </summary>
        [Test]
        public void RequestPBaaiO3B0dTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serviceId = null;
            //var response = instance.RequestPBaaiO3B0d(serviceId);
            //Assert.IsInstanceOf(typeof(InlineResponse2022), response, "response is InlineResponse2022");
        }
        
        /// <summary>
        /// Test RequestPyR6aUP5mi
        /// </summary>
        [Test]
        public void RequestPyR6aUP5miTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject6 inlineObject6 = null;
            //var response = instance.RequestPyR6aUP5mi(inlineObject6);
            //Assert.IsInstanceOf(typeof(InlineResponse2025), response, "response is InlineResponse2025");
        }
        
        /// <summary>
        /// Test RequestQ0b3cbDW8S
        /// </summary>
        [Test]
        public void RequestQ0b3cbDW8STest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestQ0b3cbDW8S();
            //Assert.IsInstanceOf(typeof(InlineResponse20010), response, "response is InlineResponse20010");
        }
        
        /// <summary>
        /// Test RequestTeqMGeER5F
        /// </summary>
        [Test]
        public void RequestTeqMGeER5FTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //var response = instance.RequestTeqMGeER5F(networkId);
            //Assert.IsInstanceOf(typeof(InlineResponse20013), response, "response is InlineResponse20013");
        }
        
        /// <summary>
        /// Test RequestTsyuwlAejK
        /// </summary>
        [Test]
        public void RequestTsyuwlAejKTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string endpointId = null;
            //var response = instance.RequestTsyuwlAejK(endpointId);
            //Assert.IsInstanceOf(typeof(InlineResponse2007EmbeddedEndpointList), response, "response is InlineResponse2007EmbeddedEndpointList");
        }
        
        /// <summary>
        /// Test RequestVIzB1k6Uqb
        /// </summary>
        [Test]
        public void RequestVIzB1k6UqbTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serviceId = null;
            //InlineObject3 inlineObject3 = null;
            //var response = instance.RequestVIzB1k6Uqb(serviceId, inlineObject3);
            //Assert.IsInstanceOf(typeof(InlineResponse2023), response, "response is InlineResponse2023");
        }
        
        /// <summary>
        /// Test RequestVeJCBUR9iO
        /// </summary>
        [Test]
        public void RequestVeJCBUR9iOTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkGroupId = null;
            //var response = instance.RequestVeJCBUR9iO(networkGroupId);
            //Assert.IsInstanceOf(typeof(InlineResponse20011), response, "response is InlineResponse20011");
        }
        
        /// <summary>
        /// Test RequestVfuaDMeTRP
        /// </summary>
        [Test]
        public void RequestVfuaDMeTRPTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestVfuaDMeTRP();
            //Assert.IsInstanceOf(typeof(InlineResponse2002), response, "response is InlineResponse2002");
        }
        
        /// <summary>
        /// Test RequestYLsf4m9TTT
        /// </summary>
        [Test]
        public void RequestYLsf4m9TTTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serviceId = null;
            //var response = instance.RequestYLsf4m9TTT(serviceId);
            //Assert.IsInstanceOf(typeof(InlineResponse2005), response, "response is InlineResponse2005");
        }
        
        /// <summary>
        /// Test RequestYhzDAw1Ks4
        /// </summary>
        [Test]
        public void RequestYhzDAw1Ks4Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RequestYhzDAw1Ks4();
            //Assert.IsInstanceOf(typeof(InlineResponse20018), response, "response is InlineResponse20018");
        }
        
    }

}
