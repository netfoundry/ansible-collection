# coding: utf-8

"""
    untitled API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5170
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.core_v2_services_service_id_model_server_egress import CoreV2ServicesServiceIdModelServerEgress  # noqa: E501
from openapi_client.rest import ApiException

class TestCoreV2ServicesServiceIdModelServerEgress(unittest.TestCase):
    """CoreV2ServicesServiceIdModelServerEgress unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CoreV2ServicesServiceIdModelServerEgress
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.core_v2_services_service_id_model_server_egress.CoreV2ServicesServiceIdModelServerEgress()  # noqa: E501
        if include_optional :
            return CoreV2ServicesServiceIdModelServerEgress(
                dial_intercept_address = null, 
                dial_intercept_port = null, 
                port = 1.337, 
                dial_intercept_protocol = True, 
                address = '0', 
                protocol = null
            )
        else :
            return CoreV2ServicesServiceIdModelServerEgress(
                dial_intercept_address = null,
                dial_intercept_port = null,
                port = 1.337,
                dial_intercept_protocol = True,
                address = '0',
                protocol = null,
        )

    def testCoreV2ServicesServiceIdModelServerEgress(self):
        """Test CoreV2ServicesServiceIdModelServerEgress"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
