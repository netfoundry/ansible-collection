# coding: utf-8

"""
    untitled API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5170
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.inline_response20014 import InlineResponse20014  # noqa: E501
from openapi_client.rest import ApiException

class TestInlineResponse20014(unittest.TestCase):
    """InlineResponse20014 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse20014
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.inline_response20014.InlineResponse20014()  # noqa: E501
        if include_optional :
            return InlineResponse20014(
                deleted_at = null, 
                name = '0', 
                updated_at = openapi_client.models.inline_response_200_14_updated_at.inline_response_200_14_updatedAt(
                    epoch_second = 1.337, 
                    nano = 1.337, ), 
                label = '0', 
                id = '0', 
                mfa_provider = '0', 
                created_at = openapi_client.models.inline_response_200_14_updated_at.inline_response_200_14_updatedAt(
                    epoch_second = 1.337, 
                    nano = 1.337, ), 
                identity_providers = [
                    openapi_client.models.inline_response_200_14_identity_providers.inline_response_200_14_identityProviders(
                        deleted_at = null, 
                        name = '0', 
                        updated_at = null, 
                        auth0_connection_type = '0', 
                        auth0_connection_id = '0', 
                        id = '0', 
                        created_at = openapi_client.models.inline_response_200_14_updated_at.inline_response_200_14_updatedAt(
                            epoch_second = 1.337, 
                            nano = 1.337, ), 
                        organization_id = '0', 
                        active = True, )
                    ], 
                deleted = True, 
                active = True
            )
        else :
            return InlineResponse20014(
                deleted_at = null,
                name = '0',
                updated_at = openapi_client.models.inline_response_200_14_updated_at.inline_response_200_14_updatedAt(
                    epoch_second = 1.337, 
                    nano = 1.337, ),
                label = '0',
                id = '0',
                mfa_provider = '0',
                created_at = openapi_client.models.inline_response_200_14_updated_at.inline_response_200_14_updatedAt(
                    epoch_second = 1.337, 
                    nano = 1.337, ),
                identity_providers = [
                    openapi_client.models.inline_response_200_14_identity_providers.inline_response_200_14_identityProviders(
                        deleted_at = null, 
                        name = '0', 
                        updated_at = null, 
                        auth0_connection_type = '0', 
                        auth0_connection_id = '0', 
                        id = '0', 
                        created_at = openapi_client.models.inline_response_200_14_updated_at.inline_response_200_14_updatedAt(
                            epoch_second = 1.337, 
                            nano = 1.337, ), 
                        organization_id = '0', 
                        active = True, )
                    ],
                deleted = True,
                active = True,
        )

    def testInlineResponse20014(self):
        """Test InlineResponse20014"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
