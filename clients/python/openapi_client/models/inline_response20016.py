# coding: utf-8

"""
    untitled API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5229
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class InlineResponse20016(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'deleted_at': 'object',
        'name': 'str',
        'updated_at': 'object',
        'email': 'str',
        'description': 'str',
        'aws_cognito_client_id': 'str',
        'auth0_client_id': 'object',
        'id': 'str',
        'contact_email': 'str',
        'created_at': 'InlineResponse20014UpdatedAt',
        'organization_id': 'str',
        'tenant_id': 'str',
        'type': 'str',
        'authentication_url': 'str',
        'active': 'bool'
    }

    attribute_map = {
        'deleted_at': 'deletedAt',
        'name': 'name',
        'updated_at': 'updatedAt',
        'email': 'email',
        'description': 'description',
        'aws_cognito_client_id': 'awsCognitoClientId',
        'auth0_client_id': 'auth0ClientId',
        'id': 'id',
        'contact_email': 'contactEmail',
        'created_at': 'createdAt',
        'organization_id': 'organizationId',
        'tenant_id': 'tenantId',
        'type': 'type',
        'authentication_url': 'authenticationUrl',
        'active': 'active'
    }

    def __init__(self, deleted_at=None, name=None, updated_at=None, email=None, description=None, aws_cognito_client_id=None, auth0_client_id=None, id=None, contact_email=None, created_at=None, organization_id=None, tenant_id=None, type=None, authentication_url=None, active=None, local_vars_configuration=None):  # noqa: E501
        """InlineResponse20016 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._deleted_at = None
        self._name = None
        self._updated_at = None
        self._email = None
        self._description = None
        self._aws_cognito_client_id = None
        self._auth0_client_id = None
        self._id = None
        self._contact_email = None
        self._created_at = None
        self._organization_id = None
        self._tenant_id = None
        self._type = None
        self._authentication_url = None
        self._active = None
        self.discriminator = None

        self.deleted_at = deleted_at
        self.name = name
        self.updated_at = updated_at
        self.email = email
        self.description = description
        self.aws_cognito_client_id = aws_cognito_client_id
        self.auth0_client_id = auth0_client_id
        self.id = id
        self.contact_email = contact_email
        self.created_at = created_at
        self.organization_id = organization_id
        self.tenant_id = tenant_id
        self.type = type
        self.authentication_url = authentication_url
        self.active = active

    @property
    def deleted_at(self):
        """Gets the deleted_at of this InlineResponse20016.  # noqa: E501


        :return: The deleted_at of this InlineResponse20016.  # noqa: E501
        :rtype: object
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this InlineResponse20016.


        :param deleted_at: The deleted_at of this InlineResponse20016.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and deleted_at is None:  # noqa: E501
            raise ValueError("Invalid value for `deleted_at`, must not be `None`")  # noqa: E501

        self._deleted_at = deleted_at

    @property
    def name(self):
        """Gets the name of this InlineResponse20016.  # noqa: E501


        :return: The name of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20016.


        :param name: The name of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse20016.  # noqa: E501


        :return: The updated_at of this InlineResponse20016.  # noqa: E501
        :rtype: object
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse20016.


        :param updated_at: The updated_at of this InlineResponse20016.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and updated_at is None:  # noqa: E501
            raise ValueError("Invalid value for `updated_at`, must not be `None`")  # noqa: E501

        self._updated_at = updated_at

    @property
    def email(self):
        """Gets the email of this InlineResponse20016.  # noqa: E501


        :return: The email of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this InlineResponse20016.


        :param email: The email of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and email is None:  # noqa: E501
            raise ValueError("Invalid value for `email`, must not be `None`")  # noqa: E501

        self._email = email

    @property
    def description(self):
        """Gets the description of this InlineResponse20016.  # noqa: E501


        :return: The description of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InlineResponse20016.


        :param description: The description of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and description is None:  # noqa: E501
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

    @property
    def aws_cognito_client_id(self):
        """Gets the aws_cognito_client_id of this InlineResponse20016.  # noqa: E501


        :return: The aws_cognito_client_id of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._aws_cognito_client_id

    @aws_cognito_client_id.setter
    def aws_cognito_client_id(self, aws_cognito_client_id):
        """Sets the aws_cognito_client_id of this InlineResponse20016.


        :param aws_cognito_client_id: The aws_cognito_client_id of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and aws_cognito_client_id is None:  # noqa: E501
            raise ValueError("Invalid value for `aws_cognito_client_id`, must not be `None`")  # noqa: E501

        self._aws_cognito_client_id = aws_cognito_client_id

    @property
    def auth0_client_id(self):
        """Gets the auth0_client_id of this InlineResponse20016.  # noqa: E501


        :return: The auth0_client_id of this InlineResponse20016.  # noqa: E501
        :rtype: object
        """
        return self._auth0_client_id

    @auth0_client_id.setter
    def auth0_client_id(self, auth0_client_id):
        """Sets the auth0_client_id of this InlineResponse20016.


        :param auth0_client_id: The auth0_client_id of this InlineResponse20016.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and auth0_client_id is None:  # noqa: E501
            raise ValueError("Invalid value for `auth0_client_id`, must not be `None`")  # noqa: E501

        self._auth0_client_id = auth0_client_id

    @property
    def id(self):
        """Gets the id of this InlineResponse20016.  # noqa: E501


        :return: The id of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20016.


        :param id: The id of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and id is None:  # noqa: E501
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def contact_email(self):
        """Gets the contact_email of this InlineResponse20016.  # noqa: E501


        :return: The contact_email of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email):
        """Sets the contact_email of this InlineResponse20016.


        :param contact_email: The contact_email of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and contact_email is None:  # noqa: E501
            raise ValueError("Invalid value for `contact_email`, must not be `None`")  # noqa: E501

        self._contact_email = contact_email

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse20016.  # noqa: E501


        :return: The created_at of this InlineResponse20016.  # noqa: E501
        :rtype: InlineResponse20014UpdatedAt
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse20016.


        :param created_at: The created_at of this InlineResponse20016.  # noqa: E501
        :type: InlineResponse20014UpdatedAt
        """
        if self.local_vars_configuration.client_side_validation and created_at is None:  # noqa: E501
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at

    @property
    def organization_id(self):
        """Gets the organization_id of this InlineResponse20016.  # noqa: E501


        :return: The organization_id of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this InlineResponse20016.


        :param organization_id: The organization_id of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and organization_id is None:  # noqa: E501
            raise ValueError("Invalid value for `organization_id`, must not be `None`")  # noqa: E501

        self._organization_id = organization_id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this InlineResponse20016.  # noqa: E501


        :return: The tenant_id of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this InlineResponse20016.


        :param tenant_id: The tenant_id of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and tenant_id is None:  # noqa: E501
            raise ValueError("Invalid value for `tenant_id`, must not be `None`")  # noqa: E501

        self._tenant_id = tenant_id

    @property
    def type(self):
        """Gets the type of this InlineResponse20016.  # noqa: E501


        :return: The type of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InlineResponse20016.


        :param type: The type of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and type is None:  # noqa: E501
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def authentication_url(self):
        """Gets the authentication_url of this InlineResponse20016.  # noqa: E501


        :return: The authentication_url of this InlineResponse20016.  # noqa: E501
        :rtype: str
        """
        return self._authentication_url

    @authentication_url.setter
    def authentication_url(self, authentication_url):
        """Sets the authentication_url of this InlineResponse20016.


        :param authentication_url: The authentication_url of this InlineResponse20016.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and authentication_url is None:  # noqa: E501
            raise ValueError("Invalid value for `authentication_url`, must not be `None`")  # noqa: E501

        self._authentication_url = authentication_url

    @property
    def active(self):
        """Gets the active of this InlineResponse20016.  # noqa: E501


        :return: The active of this InlineResponse20016.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this InlineResponse20016.


        :param active: The active of this InlineResponse20016.  # noqa: E501
        :type: bool
        """
        if self.local_vars_configuration.client_side_validation and active is None:  # noqa: E501
            raise ValueError("Invalid value for `active`, must not be `None`")  # noqa: E501

        self._active = active

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20016):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse20016):
            return True

        return self.to_dict() != other.to_dict()
