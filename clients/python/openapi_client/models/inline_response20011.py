# coding: utf-8

"""
    untitled API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5170
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class InlineResponse20011(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'organization_short_name': 'str',
        'name': 'str',
        'updated_at': 'str',
        'ziti_enabled': 'bool',
        'default_azure_virtual_wan_id': 'object',
        'owner_identity_id': 'object',
        'billing_account_id': 'object',
        'id': 'str',
        'aws_auto_scaling_gateway_enabled': 'bool',
        'created_at': 'str',
        'mfa_required': 'bool',
        'deleted': 'bool',
        'links': 'InlineResponse20011Links'
    }

    attribute_map = {
        'organization_short_name': 'organizationShortName',
        'name': 'name',
        'updated_at': 'updatedAt',
        'ziti_enabled': 'zitiEnabled',
        'default_azure_virtual_wan_id': 'defaultAzureVirtualWanId',
        'owner_identity_id': 'ownerIdentityId',
        'billing_account_id': 'billingAccountId',
        'id': 'id',
        'aws_auto_scaling_gateway_enabled': 'awsAutoScalingGatewayEnabled',
        'created_at': 'createdAt',
        'mfa_required': 'mfaRequired',
        'deleted': 'deleted',
        'links': '_links'
    }

    def __init__(self, organization_short_name=None, name=None, updated_at=None, ziti_enabled=None, default_azure_virtual_wan_id=None, owner_identity_id=None, billing_account_id=None, id=None, aws_auto_scaling_gateway_enabled=None, created_at=None, mfa_required=None, deleted=None, links=None, local_vars_configuration=None):  # noqa: E501
        """InlineResponse20011 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._organization_short_name = None
        self._name = None
        self._updated_at = None
        self._ziti_enabled = None
        self._default_azure_virtual_wan_id = None
        self._owner_identity_id = None
        self._billing_account_id = None
        self._id = None
        self._aws_auto_scaling_gateway_enabled = None
        self._created_at = None
        self._mfa_required = None
        self._deleted = None
        self._links = None
        self.discriminator = None

        self.organization_short_name = organization_short_name
        self.name = name
        self.updated_at = updated_at
        self.ziti_enabled = ziti_enabled
        self.default_azure_virtual_wan_id = default_azure_virtual_wan_id
        self.owner_identity_id = owner_identity_id
        self.billing_account_id = billing_account_id
        self.id = id
        self.aws_auto_scaling_gateway_enabled = aws_auto_scaling_gateway_enabled
        self.created_at = created_at
        self.mfa_required = mfa_required
        self.deleted = deleted
        self.links = links

    @property
    def organization_short_name(self):
        """Gets the organization_short_name of this InlineResponse20011.  # noqa: E501


        :return: The organization_short_name of this InlineResponse20011.  # noqa: E501
        :rtype: str
        """
        return self._organization_short_name

    @organization_short_name.setter
    def organization_short_name(self, organization_short_name):
        """Sets the organization_short_name of this InlineResponse20011.


        :param organization_short_name: The organization_short_name of this InlineResponse20011.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and organization_short_name is None:  # noqa: E501
            raise ValueError("Invalid value for `organization_short_name`, must not be `None`")  # noqa: E501

        self._organization_short_name = organization_short_name

    @property
    def name(self):
        """Gets the name of this InlineResponse20011.  # noqa: E501


        :return: The name of this InlineResponse20011.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20011.


        :param name: The name of this InlineResponse20011.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse20011.  # noqa: E501


        :return: The updated_at of this InlineResponse20011.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse20011.


        :param updated_at: The updated_at of this InlineResponse20011.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and updated_at is None:  # noqa: E501
            raise ValueError("Invalid value for `updated_at`, must not be `None`")  # noqa: E501

        self._updated_at = updated_at

    @property
    def ziti_enabled(self):
        """Gets the ziti_enabled of this InlineResponse20011.  # noqa: E501


        :return: The ziti_enabled of this InlineResponse20011.  # noqa: E501
        :rtype: bool
        """
        return self._ziti_enabled

    @ziti_enabled.setter
    def ziti_enabled(self, ziti_enabled):
        """Sets the ziti_enabled of this InlineResponse20011.


        :param ziti_enabled: The ziti_enabled of this InlineResponse20011.  # noqa: E501
        :type: bool
        """
        if self.local_vars_configuration.client_side_validation and ziti_enabled is None:  # noqa: E501
            raise ValueError("Invalid value for `ziti_enabled`, must not be `None`")  # noqa: E501

        self._ziti_enabled = ziti_enabled

    @property
    def default_azure_virtual_wan_id(self):
        """Gets the default_azure_virtual_wan_id of this InlineResponse20011.  # noqa: E501


        :return: The default_azure_virtual_wan_id of this InlineResponse20011.  # noqa: E501
        :rtype: object
        """
        return self._default_azure_virtual_wan_id

    @default_azure_virtual_wan_id.setter
    def default_azure_virtual_wan_id(self, default_azure_virtual_wan_id):
        """Sets the default_azure_virtual_wan_id of this InlineResponse20011.


        :param default_azure_virtual_wan_id: The default_azure_virtual_wan_id of this InlineResponse20011.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and default_azure_virtual_wan_id is None:  # noqa: E501
            raise ValueError("Invalid value for `default_azure_virtual_wan_id`, must not be `None`")  # noqa: E501

        self._default_azure_virtual_wan_id = default_azure_virtual_wan_id

    @property
    def owner_identity_id(self):
        """Gets the owner_identity_id of this InlineResponse20011.  # noqa: E501


        :return: The owner_identity_id of this InlineResponse20011.  # noqa: E501
        :rtype: object
        """
        return self._owner_identity_id

    @owner_identity_id.setter
    def owner_identity_id(self, owner_identity_id):
        """Sets the owner_identity_id of this InlineResponse20011.


        :param owner_identity_id: The owner_identity_id of this InlineResponse20011.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and owner_identity_id is None:  # noqa: E501
            raise ValueError("Invalid value for `owner_identity_id`, must not be `None`")  # noqa: E501

        self._owner_identity_id = owner_identity_id

    @property
    def billing_account_id(self):
        """Gets the billing_account_id of this InlineResponse20011.  # noqa: E501


        :return: The billing_account_id of this InlineResponse20011.  # noqa: E501
        :rtype: object
        """
        return self._billing_account_id

    @billing_account_id.setter
    def billing_account_id(self, billing_account_id):
        """Sets the billing_account_id of this InlineResponse20011.


        :param billing_account_id: The billing_account_id of this InlineResponse20011.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and billing_account_id is None:  # noqa: E501
            raise ValueError("Invalid value for `billing_account_id`, must not be `None`")  # noqa: E501

        self._billing_account_id = billing_account_id

    @property
    def id(self):
        """Gets the id of this InlineResponse20011.  # noqa: E501


        :return: The id of this InlineResponse20011.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20011.


        :param id: The id of this InlineResponse20011.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and id is None:  # noqa: E501
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def aws_auto_scaling_gateway_enabled(self):
        """Gets the aws_auto_scaling_gateway_enabled of this InlineResponse20011.  # noqa: E501


        :return: The aws_auto_scaling_gateway_enabled of this InlineResponse20011.  # noqa: E501
        :rtype: bool
        """
        return self._aws_auto_scaling_gateway_enabled

    @aws_auto_scaling_gateway_enabled.setter
    def aws_auto_scaling_gateway_enabled(self, aws_auto_scaling_gateway_enabled):
        """Sets the aws_auto_scaling_gateway_enabled of this InlineResponse20011.


        :param aws_auto_scaling_gateway_enabled: The aws_auto_scaling_gateway_enabled of this InlineResponse20011.  # noqa: E501
        :type: bool
        """
        if self.local_vars_configuration.client_side_validation and aws_auto_scaling_gateway_enabled is None:  # noqa: E501
            raise ValueError("Invalid value for `aws_auto_scaling_gateway_enabled`, must not be `None`")  # noqa: E501

        self._aws_auto_scaling_gateway_enabled = aws_auto_scaling_gateway_enabled

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse20011.  # noqa: E501


        :return: The created_at of this InlineResponse20011.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse20011.


        :param created_at: The created_at of this InlineResponse20011.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and created_at is None:  # noqa: E501
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at

    @property
    def mfa_required(self):
        """Gets the mfa_required of this InlineResponse20011.  # noqa: E501


        :return: The mfa_required of this InlineResponse20011.  # noqa: E501
        :rtype: bool
        """
        return self._mfa_required

    @mfa_required.setter
    def mfa_required(self, mfa_required):
        """Sets the mfa_required of this InlineResponse20011.


        :param mfa_required: The mfa_required of this InlineResponse20011.  # noqa: E501
        :type: bool
        """
        if self.local_vars_configuration.client_side_validation and mfa_required is None:  # noqa: E501
            raise ValueError("Invalid value for `mfa_required`, must not be `None`")  # noqa: E501

        self._mfa_required = mfa_required

    @property
    def deleted(self):
        """Gets the deleted of this InlineResponse20011.  # noqa: E501


        :return: The deleted of this InlineResponse20011.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this InlineResponse20011.


        :param deleted: The deleted of this InlineResponse20011.  # noqa: E501
        :type: bool
        """
        if self.local_vars_configuration.client_side_validation and deleted is None:  # noqa: E501
            raise ValueError("Invalid value for `deleted`, must not be `None`")  # noqa: E501

        self._deleted = deleted

    @property
    def links(self):
        """Gets the links of this InlineResponse20011.  # noqa: E501


        :return: The links of this InlineResponse20011.  # noqa: E501
        :rtype: InlineResponse20011Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this InlineResponse20011.


        :param links: The links of this InlineResponse20011.  # noqa: E501
        :type: InlineResponse20011Links
        """
        if self.local_vars_configuration.client_side_validation and links is None:  # noqa: E501
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20011):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse20011):
            return True

        return self.to_dict() != other.to_dict()
