# coding: utf-8

"""
    untitled API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5229
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class InlineResponse2003EmbeddedModel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'edge_router_attributes': 'list[str]',
        'server_egress': 'InlineResponse2003EmbeddedModelServerEgress',
        'bind_endpoint_attributes': 'list[str]',
        'client_ingress': 'InlineResponse2003EmbeddedModelClientIngress',
        'edge_router_hosts': 'list[InlineResponse2003EmbeddedModelEdgeRouterHosts]'
    }

    attribute_map = {
        'edge_router_attributes': 'edgeRouterAttributes',
        'server_egress': 'serverEgress',
        'bind_endpoint_attributes': 'bindEndpointAttributes',
        'client_ingress': 'clientIngress',
        'edge_router_hosts': 'edgeRouterHosts'
    }

    def __init__(self, edge_router_attributes=None, server_egress=None, bind_endpoint_attributes=None, client_ingress=None, edge_router_hosts=None, local_vars_configuration=None):  # noqa: E501
        """InlineResponse2003EmbeddedModel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._edge_router_attributes = None
        self._server_egress = None
        self._bind_endpoint_attributes = None
        self._client_ingress = None
        self._edge_router_hosts = None
        self.discriminator = None

        self.edge_router_attributes = edge_router_attributes
        if server_egress is not None:
            self.server_egress = server_egress
        if bind_endpoint_attributes is not None:
            self.bind_endpoint_attributes = bind_endpoint_attributes
        self.client_ingress = client_ingress
        if edge_router_hosts is not None:
            self.edge_router_hosts = edge_router_hosts

    @property
    def edge_router_attributes(self):
        """Gets the edge_router_attributes of this InlineResponse2003EmbeddedModel.  # noqa: E501


        :return: The edge_router_attributes of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._edge_router_attributes

    @edge_router_attributes.setter
    def edge_router_attributes(self, edge_router_attributes):
        """Sets the edge_router_attributes of this InlineResponse2003EmbeddedModel.


        :param edge_router_attributes: The edge_router_attributes of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :type: list[str]
        """
        if self.local_vars_configuration.client_side_validation and edge_router_attributes is None:  # noqa: E501
            raise ValueError("Invalid value for `edge_router_attributes`, must not be `None`")  # noqa: E501

        self._edge_router_attributes = edge_router_attributes

    @property
    def server_egress(self):
        """Gets the server_egress of this InlineResponse2003EmbeddedModel.  # noqa: E501


        :return: The server_egress of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :rtype: InlineResponse2003EmbeddedModelServerEgress
        """
        return self._server_egress

    @server_egress.setter
    def server_egress(self, server_egress):
        """Sets the server_egress of this InlineResponse2003EmbeddedModel.


        :param server_egress: The server_egress of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :type: InlineResponse2003EmbeddedModelServerEgress
        """

        self._server_egress = server_egress

    @property
    def bind_endpoint_attributes(self):
        """Gets the bind_endpoint_attributes of this InlineResponse2003EmbeddedModel.  # noqa: E501


        :return: The bind_endpoint_attributes of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :rtype: list[str]
        """
        return self._bind_endpoint_attributes

    @bind_endpoint_attributes.setter
    def bind_endpoint_attributes(self, bind_endpoint_attributes):
        """Sets the bind_endpoint_attributes of this InlineResponse2003EmbeddedModel.


        :param bind_endpoint_attributes: The bind_endpoint_attributes of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :type: list[str]
        """

        self._bind_endpoint_attributes = bind_endpoint_attributes

    @property
    def client_ingress(self):
        """Gets the client_ingress of this InlineResponse2003EmbeddedModel.  # noqa: E501


        :return: The client_ingress of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :rtype: InlineResponse2003EmbeddedModelClientIngress
        """
        return self._client_ingress

    @client_ingress.setter
    def client_ingress(self, client_ingress):
        """Sets the client_ingress of this InlineResponse2003EmbeddedModel.


        :param client_ingress: The client_ingress of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :type: InlineResponse2003EmbeddedModelClientIngress
        """
        if self.local_vars_configuration.client_side_validation and client_ingress is None:  # noqa: E501
            raise ValueError("Invalid value for `client_ingress`, must not be `None`")  # noqa: E501

        self._client_ingress = client_ingress

    @property
    def edge_router_hosts(self):
        """Gets the edge_router_hosts of this InlineResponse2003EmbeddedModel.  # noqa: E501


        :return: The edge_router_hosts of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :rtype: list[InlineResponse2003EmbeddedModelEdgeRouterHosts]
        """
        return self._edge_router_hosts

    @edge_router_hosts.setter
    def edge_router_hosts(self, edge_router_hosts):
        """Sets the edge_router_hosts of this InlineResponse2003EmbeddedModel.


        :param edge_router_hosts: The edge_router_hosts of this InlineResponse2003EmbeddedModel.  # noqa: E501
        :type: list[InlineResponse2003EmbeddedModelEdgeRouterHosts]
        """

        self._edge_router_hosts = edge_router_hosts

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2003EmbeddedModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse2003EmbeddedModel):
            return True

        return self.to_dict() != other.to_dict()
