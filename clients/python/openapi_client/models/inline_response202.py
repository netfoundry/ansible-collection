# coding: utf-8

"""
    untitled API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5229
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class InlineResponse202(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'deleted_at': 'object',
        'name': 'str',
        'updated_at': 'str',
        'size': 'str',
        'owner_identity_id': 'str',
        'product_version': 'str',
        'network_group_id': 'str',
        'id': 'str',
        'status': 'str',
        'created_at': 'str',
        'created_by': 'str',
        'deleted_by': 'object',
        'network_controller': 'object',
        'o365_breakout_category': 'str',
        'links': 'InlineResponse202Links'
    }

    attribute_map = {
        'deleted_at': 'deletedAt',
        'name': 'name',
        'updated_at': 'updatedAt',
        'size': 'size',
        'owner_identity_id': 'ownerIdentityId',
        'product_version': 'productVersion',
        'network_group_id': 'networkGroupId',
        'id': 'id',
        'status': 'status',
        'created_at': 'createdAt',
        'created_by': 'createdBy',
        'deleted_by': 'deletedBy',
        'network_controller': 'networkController',
        'o365_breakout_category': 'o365BreakoutCategory',
        'links': '_links'
    }

    def __init__(self, deleted_at=None, name=None, updated_at=None, size=None, owner_identity_id=None, product_version=None, network_group_id=None, id=None, status=None, created_at=None, created_by=None, deleted_by=None, network_controller=None, o365_breakout_category=None, links=None, local_vars_configuration=None):  # noqa: E501
        """InlineResponse202 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._deleted_at = None
        self._name = None
        self._updated_at = None
        self._size = None
        self._owner_identity_id = None
        self._product_version = None
        self._network_group_id = None
        self._id = None
        self._status = None
        self._created_at = None
        self._created_by = None
        self._deleted_by = None
        self._network_controller = None
        self._o365_breakout_category = None
        self._links = None
        self.discriminator = None

        self.deleted_at = deleted_at
        self.name = name
        self.updated_at = updated_at
        self.size = size
        self.owner_identity_id = owner_identity_id
        self.product_version = product_version
        self.network_group_id = network_group_id
        self.id = id
        self.status = status
        self.created_at = created_at
        self.created_by = created_by
        self.deleted_by = deleted_by
        self.network_controller = network_controller
        self.o365_breakout_category = o365_breakout_category
        self.links = links

    @property
    def deleted_at(self):
        """Gets the deleted_at of this InlineResponse202.  # noqa: E501


        :return: The deleted_at of this InlineResponse202.  # noqa: E501
        :rtype: object
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this InlineResponse202.


        :param deleted_at: The deleted_at of this InlineResponse202.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and deleted_at is None:  # noqa: E501
            raise ValueError("Invalid value for `deleted_at`, must not be `None`")  # noqa: E501

        self._deleted_at = deleted_at

    @property
    def name(self):
        """Gets the name of this InlineResponse202.  # noqa: E501


        :return: The name of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse202.


        :param name: The name of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse202.  # noqa: E501


        :return: The updated_at of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse202.


        :param updated_at: The updated_at of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and updated_at is None:  # noqa: E501
            raise ValueError("Invalid value for `updated_at`, must not be `None`")  # noqa: E501

        self._updated_at = updated_at

    @property
    def size(self):
        """Gets the size of this InlineResponse202.  # noqa: E501


        :return: The size of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this InlineResponse202.


        :param size: The size of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and size is None:  # noqa: E501
            raise ValueError("Invalid value for `size`, must not be `None`")  # noqa: E501

        self._size = size

    @property
    def owner_identity_id(self):
        """Gets the owner_identity_id of this InlineResponse202.  # noqa: E501


        :return: The owner_identity_id of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._owner_identity_id

    @owner_identity_id.setter
    def owner_identity_id(self, owner_identity_id):
        """Sets the owner_identity_id of this InlineResponse202.


        :param owner_identity_id: The owner_identity_id of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and owner_identity_id is None:  # noqa: E501
            raise ValueError("Invalid value for `owner_identity_id`, must not be `None`")  # noqa: E501

        self._owner_identity_id = owner_identity_id

    @property
    def product_version(self):
        """Gets the product_version of this InlineResponse202.  # noqa: E501


        :return: The product_version of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._product_version

    @product_version.setter
    def product_version(self, product_version):
        """Sets the product_version of this InlineResponse202.


        :param product_version: The product_version of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and product_version is None:  # noqa: E501
            raise ValueError("Invalid value for `product_version`, must not be `None`")  # noqa: E501

        self._product_version = product_version

    @property
    def network_group_id(self):
        """Gets the network_group_id of this InlineResponse202.  # noqa: E501


        :return: The network_group_id of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._network_group_id

    @network_group_id.setter
    def network_group_id(self, network_group_id):
        """Sets the network_group_id of this InlineResponse202.


        :param network_group_id: The network_group_id of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and network_group_id is None:  # noqa: E501
            raise ValueError("Invalid value for `network_group_id`, must not be `None`")  # noqa: E501

        self._network_group_id = network_group_id

    @property
    def id(self):
        """Gets the id of this InlineResponse202.  # noqa: E501


        :return: The id of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse202.


        :param id: The id of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and id is None:  # noqa: E501
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def status(self):
        """Gets the status of this InlineResponse202.  # noqa: E501


        :return: The status of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse202.


        :param status: The status of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and status is None:  # noqa: E501
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse202.  # noqa: E501


        :return: The created_at of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse202.


        :param created_at: The created_at of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and created_at is None:  # noqa: E501
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this InlineResponse202.  # noqa: E501


        :return: The created_by of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this InlineResponse202.


        :param created_by: The created_by of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and created_by is None:  # noqa: E501
            raise ValueError("Invalid value for `created_by`, must not be `None`")  # noqa: E501

        self._created_by = created_by

    @property
    def deleted_by(self):
        """Gets the deleted_by of this InlineResponse202.  # noqa: E501


        :return: The deleted_by of this InlineResponse202.  # noqa: E501
        :rtype: object
        """
        return self._deleted_by

    @deleted_by.setter
    def deleted_by(self, deleted_by):
        """Sets the deleted_by of this InlineResponse202.


        :param deleted_by: The deleted_by of this InlineResponse202.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and deleted_by is None:  # noqa: E501
            raise ValueError("Invalid value for `deleted_by`, must not be `None`")  # noqa: E501

        self._deleted_by = deleted_by

    @property
    def network_controller(self):
        """Gets the network_controller of this InlineResponse202.  # noqa: E501


        :return: The network_controller of this InlineResponse202.  # noqa: E501
        :rtype: object
        """
        return self._network_controller

    @network_controller.setter
    def network_controller(self, network_controller):
        """Sets the network_controller of this InlineResponse202.


        :param network_controller: The network_controller of this InlineResponse202.  # noqa: E501
        :type: object
        """
        if self.local_vars_configuration.client_side_validation and network_controller is None:  # noqa: E501
            raise ValueError("Invalid value for `network_controller`, must not be `None`")  # noqa: E501

        self._network_controller = network_controller

    @property
    def o365_breakout_category(self):
        """Gets the o365_breakout_category of this InlineResponse202.  # noqa: E501


        :return: The o365_breakout_category of this InlineResponse202.  # noqa: E501
        :rtype: str
        """
        return self._o365_breakout_category

    @o365_breakout_category.setter
    def o365_breakout_category(self, o365_breakout_category):
        """Sets the o365_breakout_category of this InlineResponse202.


        :param o365_breakout_category: The o365_breakout_category of this InlineResponse202.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and o365_breakout_category is None:  # noqa: E501
            raise ValueError("Invalid value for `o365_breakout_category`, must not be `None`")  # noqa: E501

        self._o365_breakout_category = o365_breakout_category

    @property
    def links(self):
        """Gets the links of this InlineResponse202.  # noqa: E501


        :return: The links of this InlineResponse202.  # noqa: E501
        :rtype: InlineResponse202Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this InlineResponse202.


        :param links: The links of this InlineResponse202.  # noqa: E501
        :type: InlineResponse202Links
        """
        if self.local_vars_configuration.client_side_validation and links is None:  # noqa: E501
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse202):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse202):
            return True

        return self.to_dict() != other.to_dict()
