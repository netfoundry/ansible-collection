//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class DefaultAPI {
    /**
     Get an Edge Router
     
     - parameter edgeRouterId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func request4Q1qU3c4dk(edgeRouterId: String, completion: @escaping ((_ data: InlineResponse20012?,_ error: Error?) -> Void)) {
        request4Q1qU3c4dkWithRequestBuilder(edgeRouterId: edgeRouterId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an Edge Router
     - GET /core/v2/edge-routers/{edgeRouterId}
     - parameter edgeRouterId: (path)  
     - returns: RequestBuilder<InlineResponse20012> 
     */
    open class func request4Q1qU3c4dkWithRequestBuilder(edgeRouterId: String) -> RequestBuilder<InlineResponse20012> {
        var path = "/core/v2/edge-routers/{edgeRouterId}"
        let edgeRouterIdPreEscape = "\(APIHelper.mapValueToPathItem(edgeRouterId))"
        let edgeRouterIdPostEscape = edgeRouterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{edgeRouterId}", with: edgeRouterIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20012>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create an Endpoint
     
     - parameter inlineObject5: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func request9sDuPizCiu(inlineObject5: InlineObject5? = nil, completion: @escaping ((_ data: InlineResponse2008?,_ error: Error?) -> Void)) {
        request9sDuPizCiuWithRequestBuilder(inlineObject5: inlineObject5).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Create an Endpoint
     - POST /core/v2/endpoints
     - parameter inlineObject5: (body)  (optional)
     - returns: RequestBuilder<InlineResponse2008> 
     */
    open class func request9sDuPizCiuWithRequestBuilder(inlineObject5: InlineObject5? = nil) -> RequestBuilder<InlineResponse2008> {
        let path = "/core/v2/endpoints"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inlineObject5)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2008>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get the list of Network product versions
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestA8syyaPZnw(completion: @escaping ((_ data: InlineResponse20019?,_ error: Error?) -> Void)) {
        requestA8syyaPZnwWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the list of Network product versions
     - GET /product-metadata/v2/download-urls.json
     - returns: RequestBuilder<InlineResponse20019> 
     */
    open class func requestA8syyaPZnwWithRequestBuilder() -> RequestBuilder<InlineResponse20019> {
        let path = "/product-metadata/v2/download-urls.json"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20019>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an Endpoint
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestAYFhAQd5pn(completion: @escaping ((_ data: InlineResponse2007?,_ error: Error?) -> Void)) {
        requestAYFhAQd5pnWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an Endpoint
     - GET /core/v2/endpoints
     - returns: RequestBuilder<InlineResponse2007> 
     */
    open class func requestAYFhAQd5pnWithRequestBuilder() -> RequestBuilder<InlineResponse2007> {
        let path = "/core/v2/endpoints"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2007>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the registration information for an Edge Router
     
     - parameter edgeRouterId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestAuarCsIhkJ(edgeRouterId: String, completion: @escaping ((_ data: InlineResponse2009?,_ error: Error?) -> Void)) {
        requestAuarCsIhkJWithRequestBuilder(edgeRouterId: edgeRouterId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the registration information for an Edge Router
     - POST /core/v2/edge-routers/{edgeRouterId}/registration-key
     - parameter edgeRouterId: (path)  
     - returns: RequestBuilder<InlineResponse2009> 
     */
    open class func requestAuarCsIhkJWithRequestBuilder(edgeRouterId: String) -> RequestBuilder<InlineResponse2009> {
        var path = "/core/v2/edge-routers/{edgeRouterId}/registration-key"
        let edgeRouterIdPreEscape = "\(APIHelper.mapValueToPathItem(edgeRouterId))"
        let edgeRouterIdPostEscape = edgeRouterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{edgeRouterId}", with: edgeRouterIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2009>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an Edge Router Policy
     
     - parameter edgeRouterPolicyId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestBtgg9ZlC0e(edgeRouterPolicyId: String, completion: @escaping ((_ data: InlineResponse2004EmbeddedEdgeRouterPolicyList?,_ error: Error?) -> Void)) {
        requestBtgg9ZlC0eWithRequestBuilder(edgeRouterPolicyId: edgeRouterPolicyId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an Edge Router Policy
     - GET /core/v2/edge-router-policies/{edgeRouterPolicyId}
     - parameter edgeRouterPolicyId: (path)  
     - returns: RequestBuilder<InlineResponse2004EmbeddedEdgeRouterPolicyList> 
     */
    open class func requestBtgg9ZlC0eWithRequestBuilder(edgeRouterPolicyId: String) -> RequestBuilder<InlineResponse2004EmbeddedEdgeRouterPolicyList> {
        var path = "/core/v2/edge-router-policies/{edgeRouterPolicyId}"
        let edgeRouterPolicyIdPreEscape = "\(APIHelper.mapValueToPathItem(edgeRouterPolicyId))"
        let edgeRouterPolicyIdPostEscape = edgeRouterPolicyIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{edgeRouterPolicyId}", with: edgeRouterPolicyIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2004EmbeddedEdgeRouterPolicyList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the list of Services
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestE1IexRfvZg(completion: @escaping ((_ data: InlineResponse2003?,_ error: Error?) -> Void)) {
        requestE1IexRfvZgWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the list of Services
     - GET /core/v2/services
     - returns: RequestBuilder<InlineResponse2003> 
     */
    open class func requestE1IexRfvZgWithRequestBuilder() -> RequestBuilder<InlineResponse2003> {
        let path = "/core/v2/services"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2003>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create a Network
     
     - parameter inlineObject: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestFWlFMQIDPX(inlineObject: InlineObject? = nil, completion: @escaping ((_ data: InlineResponse202?,_ error: Error?) -> Void)) {
        requestFWlFMQIDPXWithRequestBuilder(inlineObject: inlineObject).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Create a Network
     - POST /core/v2/networks
     - parameter inlineObject: (body)  (optional)
     - returns: RequestBuilder<InlineResponse202> 
     */
    open class func requestFWlFMQIDPXWithRequestBuilder(inlineObject: InlineObject? = nil) -> RequestBuilder<InlineResponse202> {
        let path = "/core/v2/networks"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inlineObject)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse202>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get the list of AppWANs
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestGijVCEoMlM(completion: @escaping ((_ data: InlineResponse2006?,_ error: Error?) -> Void)) {
        requestGijVCEoMlMWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the list of AppWANs
     - GET /core/v2/app-wans
     - returns: RequestBuilder<InlineResponse2006> 
     */
    open class func requestGijVCEoMlMWithRequestBuilder() -> RequestBuilder<InlineResponse2006> {
        let path = "/core/v2/app-wans"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2006>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an Edge Router Policy
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestHp1b9GiLax(completion: @escaping ((_ data: InlineResponse2004?,_ error: Error?) -> Void)) {
        requestHp1b9GiLaxWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an Edge Router Policy
     - GET /core/v2/edge-router-policies
     - returns: RequestBuilder<InlineResponse2004> 
     */
    open class func requestHp1b9GiLaxWithRequestBuilder() -> RequestBuilder<InlineResponse2004> {
        let path = "/core/v2/edge-router-policies"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2004>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Delete a Network
     
     - parameter networkId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestIAJViYLviu(networkId: String, completion: @escaping ((_ data: InlineResponse2024?,_ error: Error?) -> Void)) {
        requestIAJViYLviuWithRequestBuilder(networkId: networkId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Delete a Network
     - DELETE /core/v2/networks/{networkId}
     - parameter networkId: (path)  
     - returns: RequestBuilder<InlineResponse2024> 
     */
    open class func requestIAJViYLviuWithRequestBuilder(networkId: String) -> RequestBuilder<InlineResponse2024> {
        var path = "/core/v2/networks/{networkId}"
        let networkIdPreEscape = "\(APIHelper.mapValueToPathItem(networkId))"
        let networkIdPostEscape = networkIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{networkId}", with: networkIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2024>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the list of Network Groups
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestK9ajDJ8vUS(completion: @escaping ((_ data: InlineResponse20017?,_ error: Error?) -> Void)) {
        requestK9ajDJ8vUSWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the list of Network Groups
     - GET /rest/v1/network-groups
     - returns: RequestBuilder<InlineResponse20017> 
     */
    open class func requestK9ajDJ8vUSWithRequestBuilder() -> RequestBuilder<InlineResponse20017> {
        let path = "/rest/v1/network-groups"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20017>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an AppWAN
     
     - parameter appWanId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestKkeR9gNy25(appWanId: String, completion: @escaping ((_ data: InlineResponse200?,_ error: Error?) -> Void)) {
        requestKkeR9gNy25WithRequestBuilder(appWanId: appWanId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an AppWAN
     - GET /core/v2/app-wans/{appWanId}
     - parameter appWanId: (path)  
     - returns: RequestBuilder<InlineResponse200> 
     */
    open class func requestKkeR9gNy25WithRequestBuilder(appWanId: String) -> RequestBuilder<InlineResponse200> {
        var path = "/core/v2/app-wans/{appWanId}"
        let appWanIdPreEscape = "\(APIHelper.mapValueToPathItem(appWanId))"
        let appWanIdPostEscape = appWanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{appWanId}", with: appWanIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse200>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a Network Configuration profile
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestLOXfQSs8GE(completion: @escaping ((_ data: InlineResponse20015?,_ error: Error?) -> Void)) {
        requestLOXfQSs8GEWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get a Network Configuration profile
     - GET /core/v2/network-configs
     - e.g. small, medium, large
     - returns: RequestBuilder<InlineResponse20015> 
     */
    open class func requestLOXfQSs8GEWithRequestBuilder() -> RequestBuilder<InlineResponse20015> {
        let path = "/core/v2/network-configs"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20015>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create an Edge Router Policy
     
     - parameter inlineObject2: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestLgKxU4ph9t(inlineObject2: InlineObject2? = nil, completion: @escaping ((_ data: InlineResponse2004EmbeddedEdgeRouterPolicyList?,_ error: Error?) -> Void)) {
        requestLgKxU4ph9tWithRequestBuilder(inlineObject2: inlineObject2).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Create an Edge Router Policy
     - POST /core/v2/edge-router-policies
     - parameter inlineObject2: (body)  (optional)
     - returns: RequestBuilder<InlineResponse2004EmbeddedEdgeRouterPolicyList> 
     */
    open class func requestLgKxU4ph9tWithRequestBuilder(inlineObject2: InlineObject2? = nil) -> RequestBuilder<InlineResponse2004EmbeddedEdgeRouterPolicyList> {
        let path = "/core/v2/edge-router-policies"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inlineObject2)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2004EmbeddedEdgeRouterPolicyList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Create a Service
     
     - parameter inlineObject1: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestLopoFtq4ih(inlineObject1: InlineObject1? = nil, completion: @escaping ((_ data: InlineResponse2021?,_ error: Error?) -> Void)) {
        requestLopoFtq4ihWithRequestBuilder(inlineObject1: inlineObject1).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Create a Service
     - POST /core/v2/services
     - parameter inlineObject1: (body)  (optional)
     - returns: RequestBuilder<InlineResponse2021> 
     */
    open class func requestLopoFtq4ihWithRequestBuilder(inlineObject1: InlineObject1? = nil) -> RequestBuilder<InlineResponse2021> {
        let path = "/core/v2/services"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inlineObject1)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2021>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get the identity of the caller's API account
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestMpyYtIiS6x(completion: @escaping ((_ data: InlineResponse20016?,_ error: Error?) -> Void)) {
        requestMpyYtIiS6xWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the identity of the caller's API account
     - GET /identity/v1/api-account-identities/self
     - returns: RequestBuilder<InlineResponse20016> 
     */
    open class func requestMpyYtIiS6xWithRequestBuilder() -> RequestBuilder<InlineResponse20016> {
        let path = "/identity/v1/api-account-identities/self"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20016>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an Organization
     
     - parameter organizationId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestN6GjgPLO4v(organizationId: String, completion: @escaping ((_ data: InlineResponse20014?,_ error: Error?) -> Void)) {
        requestN6GjgPLO4vWithRequestBuilder(organizationId: organizationId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an Organization
     - GET /identity/v1/organizations/{organizationId}
     - parameter organizationId: (path)  
     - returns: RequestBuilder<InlineResponse20014> 
     */
    open class func requestN6GjgPLO4vWithRequestBuilder(organizationId: String) -> RequestBuilder<InlineResponse20014> {
        var path = "/identity/v1/organizations/{organizationId}"
        let organizationIdPreEscape = "\(APIHelper.mapValueToPathItem(organizationId))"
        let organizationIdPostEscape = organizationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{organizationId}", with: organizationIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20014>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create an AppWAN
     
     - parameter inlineObject4: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestNXoV6K2f0Q(inlineObject4: InlineObject4? = nil, completion: @escaping ((_ data: InlineResponse200?,_ error: Error?) -> Void)) {
        requestNXoV6K2f0QWithRequestBuilder(inlineObject4: inlineObject4).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Create an AppWAN
     - POST /core/v2/app-wans
     - parameter inlineObject4: (body)  (optional)
     - returns: RequestBuilder<InlineResponse200> 
     */
    open class func requestNXoV6K2f0QWithRequestBuilder(inlineObject4: InlineObject4? = nil) -> RequestBuilder<InlineResponse200> {
        let path = "/core/v2/app-wans"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inlineObject4)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse200>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get the list of Networks
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestOiIAfX2VUs(completion: @escaping ((_ data: InlineResponse2001?,_ error: Error?) -> Void)) {
        requestOiIAfX2VUsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the list of Networks
     - GET /core/v2/networks
     - returns: RequestBuilder<InlineResponse2001> 
     */
    open class func requestOiIAfX2VUsWithRequestBuilder() -> RequestBuilder<InlineResponse2001> {
        let path = "/core/v2/networks"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Delete a Service
     
     - parameter serviceId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestPBaaiO3B0d(serviceId: String, completion: @escaping ((_ data: InlineResponse2022?,_ error: Error?) -> Void)) {
        requestPBaaiO3B0dWithRequestBuilder(serviceId: serviceId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Delete a Service
     - DELETE /core/v2/services/{serviceId}
     - parameter serviceId: (path)  
     - returns: RequestBuilder<InlineResponse2022> 
     */
    open class func requestPBaaiO3B0dWithRequestBuilder(serviceId: String) -> RequestBuilder<InlineResponse2022> {
        var path = "/core/v2/services/{serviceId}"
        let serviceIdPreEscape = "\(APIHelper.mapValueToPathItem(serviceId))"
        let serviceIdPostEscape = serviceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceId}", with: serviceIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2022>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create an Edge Router
     
     - parameter inlineObject6: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestPyR6aUP5mi(inlineObject6: InlineObject6? = nil, completion: @escaping ((_ data: InlineResponse2025?,_ error: Error?) -> Void)) {
        requestPyR6aUP5miWithRequestBuilder(inlineObject6: inlineObject6).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Create an Edge Router
     - POST /core/v2/edge-routers
     - parameter inlineObject6: (body)  (optional)
     - returns: RequestBuilder<InlineResponse2025> 
     */
    open class func requestPyR6aUP5miWithRequestBuilder(inlineObject6: InlineObject6? = nil) -> RequestBuilder<InlineResponse2025> {
        let path = "/core/v2/edge-routers"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inlineObject6)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2025>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get the list of Posture Checks
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestQ0b3cbDW8S(completion: @escaping ((_ data: InlineResponse20010?,_ error: Error?) -> Void)) {
        requestQ0b3cbDW8SWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the list of Posture Checks
     - GET /core/v2/posture-checks
     - returns: RequestBuilder<InlineResponse20010> 
     */
    open class func requestQ0b3cbDW8SWithRequestBuilder() -> RequestBuilder<InlineResponse20010> {
        let path = "/core/v2/posture-checks"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20010>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a Network
     
     - parameter networkId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestTeqMGeER5F(networkId: String, completion: @escaping ((_ data: InlineResponse20013?,_ error: Error?) -> Void)) {
        requestTeqMGeER5FWithRequestBuilder(networkId: networkId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get a Network
     - GET /core/v2/networks/{networkId}
     - parameter networkId: (path)  
     - returns: RequestBuilder<InlineResponse20013> 
     */
    open class func requestTeqMGeER5FWithRequestBuilder(networkId: String) -> RequestBuilder<InlineResponse20013> {
        var path = "/core/v2/networks/{networkId}"
        let networkIdPreEscape = "\(APIHelper.mapValueToPathItem(networkId))"
        let networkIdPostEscape = networkIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{networkId}", with: networkIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20013>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an Endpoint
     
     - parameter endpointId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestTsyuwlAejK(endpointId: String, completion: @escaping ((_ data: InlineResponse2007EmbeddedEndpointList?,_ error: Error?) -> Void)) {
        requestTsyuwlAejKWithRequestBuilder(endpointId: endpointId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an Endpoint
     - GET /core/v2/endpoints/{endpointId}
     - parameter endpointId: (path)  
     - returns: RequestBuilder<InlineResponse2007EmbeddedEndpointList> 
     */
    open class func requestTsyuwlAejKWithRequestBuilder(endpointId: String) -> RequestBuilder<InlineResponse2007EmbeddedEndpointList> {
        var path = "/core/v2/endpoints/{endpointId}"
        let endpointIdPreEscape = "\(APIHelper.mapValueToPathItem(endpointId))"
        let endpointIdPostEscape = endpointIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{endpointId}", with: endpointIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2007EmbeddedEndpointList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Change some properties of a Service
     
     - parameter serviceId: (path)  
     - parameter inlineObject3: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestVIzB1k6Uqb(serviceId: String, inlineObject3: InlineObject3? = nil, completion: @escaping ((_ data: InlineResponse2023?,_ error: Error?) -> Void)) {
        requestVIzB1k6UqbWithRequestBuilder(serviceId: serviceId, inlineObject3: inlineObject3).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Change some properties of a Service
     - PATCH /core/v2/services/{serviceId}
     - parameter serviceId: (path)  
     - parameter inlineObject3: (body)  (optional)
     - returns: RequestBuilder<InlineResponse2023> 
     */
    open class func requestVIzB1k6UqbWithRequestBuilder(serviceId: String, inlineObject3: InlineObject3? = nil) -> RequestBuilder<InlineResponse2023> {
        var path = "/core/v2/services/{serviceId}"
        let serviceIdPreEscape = "\(APIHelper.mapValueToPathItem(serviceId))"
        let serviceIdPostEscape = serviceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceId}", with: serviceIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inlineObject3)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2023>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Get a Network Group
     
     - parameter networkGroupId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestVeJCBUR9iO(networkGroupId: String, completion: @escaping ((_ data: InlineResponse20011?,_ error: Error?) -> Void)) {
        requestVeJCBUR9iOWithRequestBuilder(networkGroupId: networkGroupId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get a Network Group
     - GET /rest/v1/network-groups/{networkGroupId}
     - parameter networkGroupId: (path)  
     - returns: RequestBuilder<InlineResponse20011> 
     */
    open class func requestVeJCBUR9iOWithRequestBuilder(networkGroupId: String) -> RequestBuilder<InlineResponse20011> {
        var path = "/rest/v1/network-groups/{networkGroupId}"
        let networkGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(networkGroupId))"
        let networkGroupIdPostEscape = networkGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{networkGroupId}", with: networkGroupIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20011>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the list of data centers
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestVfuaDMeTRP(completion: @escaping ((_ data: InlineResponse2002?,_ error: Error?) -> Void)) {
        requestVfuaDMeTRPWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get the list of data centers
     - GET /core/v2/data-centers
     - returns: RequestBuilder<InlineResponse2002> 
     */
    open class func requestVfuaDMeTRPWithRequestBuilder() -> RequestBuilder<InlineResponse2002> {
        let path = "/core/v2/data-centers"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2002>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a Service
     
     - parameter serviceId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestYLsf4m9TTT(serviceId: String, completion: @escaping ((_ data: InlineResponse2005?,_ error: Error?) -> Void)) {
        requestYLsf4m9TTTWithRequestBuilder(serviceId: serviceId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get a Service
     - GET /core/v2/services/{serviceId}
     - parameter serviceId: (path)  
     - returns: RequestBuilder<InlineResponse2005> 
     */
    open class func requestYLsf4m9TTTWithRequestBuilder(serviceId: String) -> RequestBuilder<InlineResponse2005> {
        var path = "/core/v2/services/{serviceId}"
        let serviceIdPreEscape = "\(APIHelper.mapValueToPathItem(serviceId))"
        let serviceIdPostEscape = serviceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{serviceId}", with: serviceIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse2005>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get an Edge Router
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func requestYhzDAw1Ks4(completion: @escaping ((_ data: InlineResponse20018?,_ error: Error?) -> Void)) {
        requestYhzDAw1Ks4WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get an Edge Router
     - GET /core/v2/edge-routers
     - returns: RequestBuilder<InlineResponse20018> 
     */
    open class func requestYhzDAw1Ks4WithRequestBuilder() -> RequestBuilder<InlineResponse20018> {
        let path = "/core/v2/edge-routers"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InlineResponse20018>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
